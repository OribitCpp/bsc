// RUN: %clang %s -o %t.output
// RUN: %t.output
// RUN: %clang -rewrite-bsc %s -o %t-rw.c
// RUN: FileCheck --input-file=%t-rw.c %s
// RUN: %clang %t-rw.c -o %t-rw.output
// RUN: %t-rw.output
// RUN: %clang -rewrite-bsc -line %s -o %t-rwline.c
// RUN: FileCheck --input-file=%t-rwline.c %s --check-prefix=CHECK-L
// expected-no-diagnostics

struct MyStruct<T> {
  T res;
};

// CHECK-L: #line 16 "{{.*}}.cbs"
void int::increase(int* this) {
    *this = *this +1;
}

int struct MyStruct<T>::foo() {
  int x = 1;
  x.increase();
  return x;
}

int main() {
  int res = struct MyStruct<int>::foo();
  return res - 2;  
}

// CHECK:      struct MyStruct_int {
// CHECK-NEXT:   int res;
// CHECK-NEXT: };
// CHECK-EMPTY:
// CHECK-NEXT: static int struct_MyStruct_int_foo(void);
// CHECK-EMPTY:
// CHECK-NEXT: void int_increase(int *this) {
// CHECK-NEXT:   *this = *this + 1;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: int main(void) {
// CHECK-NEXT:   int res = struct_MyStruct_int_foo();
// CHECK-NEXT:   return res - 2;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: static int struct_MyStruct_int_foo(void) {
// CHECK-NEXT:   int x = 1;
// CHECK-NEXT:   int_increase(&x);
// CHECK-NEXT:   return x;
// CHECK-NEXT: }
