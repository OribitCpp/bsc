// RUN: %clang %s -o %t.output
// RUN: %t.output
// RUN: %clang -rewrite-bsc %s -o %t-rw.c
// RUN: FileCheck --input-file=%t-rw.c %s
// RUN: %clang %t-rw.c -o %t-rw.output
// RUN: %t-rw.output
// expected-no-diagnostics

struct MyStruct1<T> {
  T res;
};

struct MyStruct2<T> {
  T res;
};

int struct MyStruct1<T>::foo(struct MyStruct1<T> *this) {
  return 42;
}

int struct MyStruct2<T>::foo() {
  struct MyStruct1<int> s = {.res = 1};
  return s.foo();
}

int main() {
  int res = struct MyStruct2<int>::foo();
  return res - 42;  
}

// CHECK:      struct MyStruct1_int {
// CHECK-NEXT:   int res;
// CHECK-NEXT: };
// CHECK-EMPTY:
// CHECK-NEXT: struct MyStruct2_int {
// CHECK-NEXT:   int res;
// CHECK-NEXT: };
// CHECK-EMPTY:
// CHECK-NEXT: static int struct_MyStruct1_int_foo(struct MyStruct1_int *this);
// CHECK-EMPTY:
// CHECK-NEXT: static int struct_MyStruct2_int_foo(void);
// CHECK-EMPTY:
// CHECK-NEXT: int main(void) {
// CHECK-NEXT:   int res = struct_MyStruct2_int_foo();
// CHECK-NEXT:   return res - 42;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: static int struct_MyStruct1_int_foo(struct MyStruct1_int *this) {
// CHECK-NEXT:   return 42;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: static int struct_MyStruct2_int_foo(void) {
// CHECK-NEXT:   struct MyStruct1_int s = {.res = 1};
// CHECK-NEXT:   return struct_MyStruct1_int_foo(&s);
// CHECK-NEXT: }
