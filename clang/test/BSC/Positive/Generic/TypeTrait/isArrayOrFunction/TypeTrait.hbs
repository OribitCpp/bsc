#include<stdio.h>
#include "bsc_type_traits.hbs"

struct S<T> {};
void struct S<T>::gmf_type_det(struct S<T>* this) {
    if (is_integral<T>()) {
        printf("integral\n");
    }
    else if (is_floating_point<T>()) {
        printf("floating_point\n");
    }
    else if (is_pointer<T>()) {
        printf("pointer\n");
    }
    else if (is_function<T>()) {
        printf("function\n");
    }
    else if (is_array<T>()) {
        printf("array\n");
    }
    else if (is_struct<T>()) {
        printf("struct\n");
    }
    else if (is_union<T>()) {
        printf("union\n");
    }
    else if (is_enum<T>()) {
        printf("enum\n");
    }
    else if (is_void<T>()) {
        printf("void\n");
    }
}

void gf_type_det<T>() {
    if (is_integral<T>()) {
        printf("integral\n");
    }
    else if (is_floating_point<T>()) {
        printf("floating_point\n");
    }
    else if (is_pointer<T>()) {
        printf("pointer\n");
    }
    else if (is_function<T>()) {
        printf("function\n");
    }
    else if (is_array<T>()) {
        printf("array\n");
    }
    else if (is_struct<T>()) {
        printf("struct\n");
    }
    else if (is_union<T>()) {
        printf("union\n");
    }
    else if (is_enum<T>()) {
        printf("enum\n");
    }
    else if (is_void<T>()) {
        printf("void\n");
    }
}
