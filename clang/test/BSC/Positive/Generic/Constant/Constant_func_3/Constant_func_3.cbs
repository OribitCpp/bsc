// RUN: %clang %s -o %t.output
// RUN: %t.output
// RUN: %clang -rewrite-bsc %s -o %t-rw.c
// RUN: %clang %t-rw.c -o %t-rw.output
// RUN: %t-rw.output
// expected-no-diagnostics

struct S1<int N> {};
typedef MyS1<int N> =  struct S1<N>;

struct S2<T> {};
typedef MyS2<T> =  struct S2<T>;

S1<5> foo1<T>() {
    S1<5> s;
    return s;
}

S1<N> foo2<int N, T>() {
    S1<N> s;
    return s;
}

MyS1<5> foo3<T>() {
    MyS1<5> s;
    return s;
}

MyS1<N> foo4<int N, T>() {
    MyS1<N> s;
    return s;
}

S2<int> foo5<int N>() {
    S2<int> s;
    return s;
}

S2<T> foo6<int N, T>() {
    S2<T> s;
    return s;
}

MyS2<int> foo7<int N>() {
    MyS2<int> s;
    return s;
}

MyS2<T> foo8<int N, T>() {
    MyS2<T> s;
    return s;
}

int main() {
  S1<5> s1 = foo1<int>();
  S1<5> s2 = foo2<5, int>();
  MyS1<5> s3 = foo3<int>();
  MyS1<5> s4 = foo4<5, int>();    
  
  S2<int> s5 = foo5<5>();
  S2<int> s6 = foo6<5, int>();
  MyS2<int> s7 = foo7<5>();
  MyS2<int> s8 = foo8<5, int>();
  return 0;
}