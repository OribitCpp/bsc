// RUN: %clang_cc1 -verify %s
// expected-no-diagnostics

struct Foo {
  int a;
};
owned struct Bar {
public:
  int a;
};

//ok member functions definition for struct
int struct Foo::getA(This this) {
  return this.a;
}
int struct Foo::getA_2(struct Foo this) {
  return this.a;
}
int struct Foo::getB(This* this) {
  return this->a;
}
int struct Foo::getB_2(struct Foo* this) {
  return this->a;
}
int struct Foo::getC(const This* this) {
  return this->a;
}
int struct Foo::getC_2(const struct Foo* this) {
  return this->a;
}
int struct Foo::getD(This* borrow this) {
  return this->a;
}
int struct Foo::getD_2(struct Foo* borrow this) {
  return this->a;
}
int struct Foo::getE(const This* borrow this) {
  return this->a;
}
int struct Foo::getE_2(const struct Foo* borrow this) {
  return this->a;
}
struct Foo* owned struct Foo::getF(This* owned this) {
  return this;
}
struct Foo* owned struct Foo::getF_2(struct Foo* owned this) {
  return this;
}

int struct Foo::getG(const This this) {
  return this.a;
}
struct Foo* const struct Foo::getG_2(This* const this) { 
  return this;
}
const struct Foo* owned struct Foo::getH(const This* owned this) { 
  return this;
}

Bar Bar::getA_0(const This this) {
  return this;
}

const Bar* owned Bar::getD_0(const This* owned this) {
  return this;
}
Bar* const Bar::getE_0(This* const this) {
  return this;
}

// ok member functions definition for owned struct
Bar Bar::getA(This this) {
  return this;
}
Bar Bar::getA_2(Bar this) {
  return this;
}
int Bar::getB(This* this) {
  return this->a;
}
int Bar::getB_2(Bar* this) {
  return this->a;
}
int Bar::getC(const This* this) {
  return this->a;
}
int Bar::getC_2(const Bar* this) {
  return this->a;
}
int Bar::getD(This* borrow this) {
  return this->a;
}
int Bar::getD_2(Bar* borrow this) {
  return this->a;
}
int Bar::getE(const This* borrow this) {
  return this->a;
}
int Bar::getE_2(const Bar* borrow this) {
  return this->a;
}
Bar* owned Bar::getF(This* owned this) {
  return this;
}
Bar* owned Bar::getF_2(Bar* owned this) {
  return this;
}
