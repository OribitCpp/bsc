// Test without serialization:
// RUN: %clang_cc1 -triple x86_64-unknown-unknown -ast-dump %s \
// RUN: | FileCheck --strict-whitespace %s
//
// Test with serialization:
// RUN: %clang_cc1 -triple x86_64-unknown-unknown -emit-pch -o %t %s
// RUN: %clang_cc1 -x bsc -triple x86_64-unknown-unknown -include-pch %t -ast-dump-all /dev/null \
// RUN: | sed -e "s/ <undeserialized declarations>//" -e "s/ imported//" \
// RUN: | FileCheck --strict-whitespace %s



int read(int a) {
  return 0;
}

struct Addr
{
    int a;
    char str[10];
};

int f(int start) {
  const long myLong = 100000L;
  int result = read(2);
  return result + 5 + start;
}

int main() {
  f(1);
  return 0;
}

  // CHECK:       |-FunctionDecl 0x{{.+}} <line:23:1, line:27:1> line:23:5 used f 'int (int)'
  // CHECK-NEXT:  | |-ParmVarDecl 0x{{.+}} <col:7, col:11> col:11 used start 'int'
  // CHECK-NEXT:  | `-CompoundStmt 0x{{.+}} <col:18, line:27:1>
  // CHECK-NEXT:  |   |-DeclStmt 0x{{.+}} <line:24:3, col:30>
  // CHECK-NEXT:  |   | `-VarDecl 0x{{.+}} <col:3, col:23> col:14 myLong 'const long' cinit
  // CHECK-NEXT:  |   |   `-IntegerLiteral 0x{{.+}} <col:23> 'long' 100000

