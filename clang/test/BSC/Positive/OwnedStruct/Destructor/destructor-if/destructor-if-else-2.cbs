// RUN: %clang %s -o %test.output
// RUN: %test.output
// RUN: %clang -rewrite-bsc %s -o %t-rw.c
// RUN: FileCheck --input-file=%t-rw.c %s
// RUN: %clang %t-rw.c -o %t-rw.output
// RUN: %t-rw.output

int g_flag = 0x3;
owned struct S {
public:
  ~S(S this) {
    g_flag--;
  }
};
int foo<T>() {
  if (1)
    if (1) {
      S s1 = {};
    }

  if (1)
    if (1)
      S s1 = {};
  return 0;
}

int goo<T>() {
  if (0) {
    S s1 = {};
  } else if (0)
    if (1)
      S s1 = {};
  return 0;
}

int koo<T>() {
  S s1 = {};
  if (0) {
    S s1 = {};
  } else if (0)
    if (1)
      return 1;
  return 0;
}

int main() {
  foo<int>();
  goo<char>();
  koo<char>();
  return g_flag;
}

// CHECK:struct S {
// CHECK-NEXT:};
// CHECK-EMPTY:
// CHECK-NEXT:void struct_S_D( struct S this);
// CHECK-EMPTY:
// CHECK-NEXT:static int foo_int(void);
// CHECK-EMPTY:
// CHECK-NEXT:static int goo_char(void);
// CHECK-EMPTY:
// CHECK-NEXT:static int koo_char(void);
// CHECK-EMPTY:
// CHECK-NEXT:int g_flag = 3;
// CHECK-EMPTY:
// CHECK-NEXT:int main(void) {
// CHECK-NEXT:    foo_int();
// CHECK-NEXT:    goo_char();
// CHECK-NEXT:    koo_char();
// CHECK-NEXT:    return g_flag;
// CHECK-NEXT:}
// CHECK-EMPTY:
// CHECK-NEXT:void struct_S_D( struct S this) {
// CHECK-NEXT:    _Bool this_is_moved = 0;
// CHECK-NEXT:    g_flag--;
// CHECK-NEXT:}
// CHECK-EMPTY:
// CHECK-NEXT:static int foo_int(void) {
// CHECK-NEXT:    if (1)
// CHECK-NEXT:        if (1) {
// CHECK-NEXT:             struct S s1 = {};
// CHECK-NEXT:            _Bool s1_is_moved = 0;
// CHECK-NEXT:            if (!s1_is_moved)
// CHECK-NEXT:                struct_S_D(s1);
// CHECK-NEXT:        }
// CHECK-NEXT:    if (1)
// CHECK-NEXT:        if (1) {
// CHECK-NEXT:             struct S s1 = {};
// CHECK-NEXT:            _Bool s1_is_moved = 0;
// CHECK-NEXT:            if (!s1_is_moved)
// CHECK-NEXT:                struct_S_D(s1);
// CHECK-NEXT:        }
// CHECK-NEXT:    return 0;
// CHECK-NEXT:}
// CHECK-EMPTY:
// CHECK-NEXT:static int goo_char(void) {
// CHECK-NEXT:    if (0) {
// CHECK-NEXT:         struct S s1 = {};
// CHECK-NEXT:        _Bool s1_is_moved = 0;
// CHECK-NEXT:        if (!s1_is_moved)
// CHECK-NEXT:            struct_S_D(s1);
// CHECK-NEXT:    } else if (0)
// CHECK-NEXT:        if (1) {
// CHECK-NEXT:             struct S s1 = {};
// CHECK-NEXT:            _Bool s1_is_moved = 0;
// CHECK-NEXT:            if (!s1_is_moved)
// CHECK-NEXT:                struct_S_D(s1);
// CHECK-NEXT:        }
// CHECK-NEXT:    return 0;
// CHECK-NEXT:}
// CHECK-EMPTY:
// CHECK-NEXT:static int koo_char(void) {
// CHECK-NEXT:     struct S s1 = {};
// CHECK-NEXT:    _Bool s1_is_moved = 0;
// CHECK-NEXT:    if (0) {
// CHECK-NEXT:         struct S s1 = {};
// CHECK-NEXT:        _Bool s1_is_moved = 0;
// CHECK-NEXT:        if (!s1_is_moved)
// CHECK-NEXT:            struct_S_D(s1);
// CHECK-NEXT:    } else if (0)
// CHECK-NEXT:        if (1) {
// CHECK-NEXT:            if (!s1_is_moved)
// CHECK-NEXT:                struct_S_D(s1);
// CHECK-NEXT:            return 1;
// CHECK-NEXT:        }
// CHECK-NEXT:    if (!s1_is_moved)
// CHECK-NEXT:        struct_S_D(s1);
// CHECK-NEXT:    return 0;
// CHECK-NEXT:}