// RUN: %clang -Eno-deref-nullable -rewrite-bsc %s -o %t-rw.c
// RUN: FileCheck --input-file=%t-rw.c %s
// expected-no-diagnostics

struct S {
    int *borrow _Nullable p;
};

safe void test1(void) {
    struct S s = { .p = nullptr };
    if (s.p != nullptr) {
        *s.p = 10;
    } else {
        *s.p = 20;              // nullable pointer cannot be dereferenced
    }
    *s.p = 30;                  // nullable pointer cannot be dereferenced
}

// CHECK:      struct S;
// CHECK-NEXT: struct S {
// CHECK-NEXT:     int * p;
// CHECK-NEXT: };
// CHECK-EMPTY: 
// CHECK:      void test1(void) {
// CHECK-NEXT:     struct S s = {.p = 0};
// CHECK-NEXT:     if (s.p != 0) {
// CHECK-NEXT:         *s.p = 10;
// CHECK-NEXT:     } else {
// CHECK-NEXT:         *s.p = 20;
// CHECK-NEXT:     }
// CHECK-NEXT:     *s.p = 30;
// CHECK-NEXT: }
// CHECK-EMPTY: 