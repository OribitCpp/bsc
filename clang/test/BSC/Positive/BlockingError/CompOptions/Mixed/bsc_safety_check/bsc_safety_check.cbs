// RUN: %clang -Eno-bsc-safety-check -rewrite-bsc %s -o %t-rw.c
// RUN: FileCheck --input-file=%t-rw.c %s
// expected-no-diagnostics

safe int *owned _Nonnull safe_malloc(int a);
safe void test1(void) {
    int *owned _Nullable p1 = nullptr;
    int *owned _Nonnull p2 = p1;              // nonnull pointer cannot be assigned by nullable pointer
    int *owned _Nullable p3 = safe_malloc(5);
    int *owned _Nonnull p4 = p3;
    int *owned _Nonnull p5 = safe_malloc(5);  // nonnull pointer cannot be assigned by nullable pointer
    p5 = p1;                                  // use of moved value: `p1`
    p5 = p3;                                  // memory leak of value: `p5`
}

// CHECK:      int * safe_malloc(int a);
// CHECK-EMPTY: 
// CHECK:      void test1(void) {
// CHECK-NEXT:     int * p1 = 0;
// CHECK-NEXT:     int * p2 = p1;
// CHECK-NEXT:     int * p3 = safe_malloc(5);
// CHECK-NEXT:     int * p4 = p3;
// CHECK-NEXT:     int * p5 = safe_malloc(5);
// CHECK-NEXT:     p5 = p1;
// CHECK-NEXT:     p5 = p3;
// CHECK-NEXT: }
// CHECK-EMPTY: 