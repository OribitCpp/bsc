// RUN: %clang_cc1 -verify %s
// expected-no-diagnostics
// RUN: %clang %s -o %t.output
// RUN: %t.output
// RUN: %clang -rewrite-bsc %s -o %t-rw.c
// RUN: %clang %t-rw.c -o %t-rw.output
// RUN: %t-rw.output

struct B {
    int * a;
};

struct B SafeMalloc(int *arg) {
    struct B aaa = { .a = arg };
    return aaa;
}

void SafeMalloc1(int *arg) {
    struct B aaa = { .a = arg };
    struct B * owned bbb = (struct B * owned)&aaa;
    struct B *ccc = (struct B *)bbb;
}

typedef struct AAA {
    volatile int lock;
} T;

static struct AAAA {
    T a;
} g_t = {0};

struct C {
    T * latch;
};

void SafeMalloc2() {
    struct C aaa = { .latch = &g_t.a };
    struct C * owned local = (struct C* owned)&aaa;
    struct C *ccc = (struct C *)local;
}

int main() { return 0; }