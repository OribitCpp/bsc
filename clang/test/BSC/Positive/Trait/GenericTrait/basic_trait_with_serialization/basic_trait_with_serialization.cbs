// RUN: %clang %s -o %t.output
// RUN: %t.output
// expected-no-diagnostics

// Test with serialization:
// RUN: %clang_cc1 -triple x86_64-unknown-unknown -emit-pch -o %t %s
// RUN: %clang_cc1 -x bsc -triple x86_64-unknown-unknown -include-pch %t -ast-dump-all /dev/null \
// RUN: | sed -e "s/ <undeserialized declarations>//" -e "s/ imported//" \
// RUN: | FileCheck --strict-whitespace %s

struct PollResult<T> {
    int c;
};
// CHECK: ClassTemplateDecl 0x{{[^ ]*}} <{{.*}}:[[@LINE-3]]:1, line:[[@LINE-1]]:1> line:[[@LINE-3]]:8 PollResult
// CHECK-NEXT: TemplateTypeParmDecl 0x{{[^ ]*}} <col:19> col:19 class depth 0 index 0 T
// CHECK-NEXT: RecordDecl 0x{{[^ ]*}} <col:1, line:[[@LINE-3]]:1> line:[[@LINE-5]]:8 struct PollResult definition
// CHECK-NEXT: FieldDecl 0x{{[^ ]*}} <line:[[@LINE-5]]:5, col:9> col:9 c 'int'
// CHECK-NEXT: ClassTemplateSpecializationDecl 0x{{[^ ]*}} <line:[[@LINE-7]]:1, line:[[@LINE-5]]:1> line:[[@LINE-7]]:8 struct PollResult definition
// CHECK-NEXT: DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
// CHECK-NEXT: DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
// CHECK-NEXT: CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
// CHECK-NEXT: MoveConstructor exists simple trivial needs_implicit
// CHECK-NEXT: CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
// CHECK-NEXT: MoveAssignment exists simple trivial needs_implicit
// CHECK-NEXT: Destructor simple irrelevant trivial needs_implicit
// CHECK-NEXT: TemplateArgument type 'int'
// CHECK-NEXT: BuiltinType 0x{{[^ ]*}} 'int'
// CHECK-NEXT: FieldDecl 0x{{[^ ]*}} <line:[[@LINE-16]]:5, col:9> col:9 referenced c 'int'

trait Future<T> {
    struct PollResult<T> poll(This* this, T a);
    void free(This* this);
};
// CHECK: ClassTemplateDecl 0x{{[^ ]*}} <line:[[@LINE-4]]:1, col:7> col:1 __Trait_Future_Vtable
// CHECK-NEXT: TemplateTypeParmDecl 0x{{[^ ]*}} <col:14> col:14 referenced class depth 0 index 0 T
// CHECK-NEXT: RecordDecl 0x{{[^ ]*}} <col:1, col:7> col:7 struct __Trait_Future_Vtable definition
// CHECK-NEXT: FieldDecl 0x{{[^ ]*}} <line:[[@LINE-6]]:5, col:46> col:46 poll 'struct PollResult<T> (*)(void *, T)'
// CHECK-NEXT: FieldDecl 0x{{[^ ]*}} <line:[[@LINE-6]]:5, col:25> col:25 free 'void (*)(void *)'
// CHECK-NEXT: ClassTemplateSpecializationDecl 0x{{[^ ]*}} <line:[[@LINE-9]]:1, col:7> col:7 struct __Trait_Future_Vtable definition
// CHECK-NEXT: DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
// CHECK-NEXT: DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
// CHECK-NEXT: CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
// CHECK-NEXT: MoveConstructor exists simple trivial needs_implicit
// CHECK-NEXT: CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
// CHECK-NEXT: MoveAssignment exists simple trivial needs_implicit
// CHECK-NEXT: Destructor simple irrelevant trivial needs_implicit
// CHECK-NEXT: TemplateArgument type 'int'
// CHECK-NEXT: BuiltinType 0x{{[^ ]*}} 'int'
// CHECK-NEXT: FieldDecl 0x{{[^ ]*}} <line:[[@LINE-18]]:5, col:46> col:46 referenced poll 'struct PollResult<int> (*)(void *, int)'
// CHECK-NEXT: FieldDecl 0x{{[^ ]*}} <line:[[@LINE-18]]:5, col:25> col:25 free 'void (*)(void *)'
// CHECK-NEXT: ClassTemplateDecl 0x{{[^ ]*}} <line:[[@LINE-21]]:1, col:7> col:1 __Trait_Future
// CHECK-NEXT: TemplateTypeParmDecl 0x{{[^ ]*}} <col:14> col:14 referenced class depth 0 index 0 T
// CHECK-NEXT: RecordDecl 0x{{[^ ]*}} <col:1, col:7> col:7 struct __Trait_Future definition
// CHECK-NEXT: FieldDecl 0x{{[^ ]*}} <col:1, col:7> col:7 data 'void *'
// CHECK-NEXT: FieldDecl 0x{{[^ ]*}} <col:1, col:7> col:7 vtable 'struct __Trait_Future_Vtable<T> *'
// CHECK-NEXT: ClassTemplateSpecializationDecl 0x{{[^ ]*}} <col:1, col:7> col:7 struct __Trait_Future definition
// CHECK-NEXT: DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
// CHECK-NEXT: DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
// CHECK-NEXT: CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
// CHECK-NEXT: MoveConstructor exists simple trivial needs_implicit
// CHECK-NEXT: CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
// CHECK-NEXT: MoveAssignment exists simple trivial needs_implicit
// CHECK-NEXT: Destructor simple irrelevant trivial needs_implicit
// CHECK-NEXT: TemplateArgument type 'int'
// CHECK-NEXT: BuiltinType 0x{{[^ ]*}} 'int'
// CHECK-NEXT: FieldDecl 0x{{[^ ]*}} <col:1, col:7> col:7 referenced data 'void *'
// CHECK-NEXT: FieldDecl 0x{{[^ ]*}} <col:1, col:7> col:7 referenced vtable 'struct __Trait_Future_Vtable<int> *'

struct PollResult<int> int::poll(int* this, int a) {
    struct PollResult<int> p;
    p.c = a;
    return p;
}
// CHECK: BSCMethodDecl 0x{{[^ ]*}} parent 0x{{[^ ]*}} <line:[[@LINE-5]]:1, line:[[@LINE-1]]:1> line:[[@LINE-5]]:29 used poll 'struct PollResult<int> (int *, int)'
// CHECK-NEXT: ParmVarDecl 0x{{[^ ]*}} <col:34, col:39> col:39 this 'int *'
// CHECK-NEXT: ParmVarDecl 0x{{[^ ]*}} <col:45, col:49> col:49 used a 'int'
// CHECK-NEXT: CompoundStmt 0x{{[^ ]*}} <col:52, line:[[@LINE-4]]:1>
// CHECK-NEXT: DeclStmt 0x{{[^ ]*}} <line:[[@LINE-8]]:12, col:29>
// CHECK-NEXT: VarDecl 0x{{[^ ]*}} <col:12, col:28> col:28 used p 'PollResult<int>':'struct PollResult<int>' nrvo
// CHECK-NEXT: BinaryOperator 0x{{[^ ]*}} <line:[[@LINE-9]]:5, col:11> 'int' '='
// CHECK-NEXT: MemberExpr 0x{{[^ ]*}} <col:5, col:7> 'int' lvalue .c 0x{{[^ ]*}}
// CHECK-NEXT: DeclRefExpr 0x{{[^ ]*}} <col:5> 'PollResult<int>':'struct PollResult<int>' lvalue Var 0x{{[^ ]*}} 'p' 'PollResult<int>':'struct PollResult<int>'
// CHECK-NEXT: ImplicitCastExpr 0x{{[^ ]*}} <col:11> 'int' <LValueToRValue>
// CHECK-NEXT: DeclRefExpr 0x{{[^ ]*}} <col:11> 'int' lvalue ParmVar 0x{{[^ ]*}} 'a' 'int'
// CHECK-NEXT: ReturnStmt 0x{{[^ ]*}} <line:[[@LINE-13]]:5, col:12>
// CHECK-NEXT: ImplicitCastExpr 0x{{[^ ]*}} <col:12> 'PollResult<int>':'struct PollResult<int>' <NoOp>
// CHECK-NEXT: DeclRefExpr 0x{{[^ ]*}} <col:12> 'PollResult<int>':'struct PollResult<int>' lvalue Var 0x{{[^ ]*}} 'p' 'PollResult<int>':'struct PollResult<int>'

void int::free(int* this) {}
// CHECK: BSCMethodDecl 0x{{[^ ]*}} parent 0x{{[^ ]*}} <col:1, col:28> col:11 used free 'void (int *)'
// CHECK-NEXT: ParmVarDecl 0x{{[^ ]*}} <col:16, col:21> col:21 this 'int *'
// CHECK-NEXT: CompoundStmt 0x{{[^ ]*}} <col:27, col:28>

impl trait Future<int> for int;
// CHECK: VarDecl 0x{{[^ ]*}} <line:[[@LINE-1]]:6, col:28> col:28 __int_trait_Future 'struct __Trait_Future_Vtable<int>':'struct __Trait_Future_Vtable<int>' cinit
// CHECK-NEXT: InitListExpr 0x{{[^ ]*}} <col:6, col:28> 'struct __Trait_Future_Vtable<int>':'struct __Trait_Future_Vtable<int>'
// CHECK-NEXT: CStyleCastExpr 0x{{[^ ]*}} <col:6> 'struct PollResult<int> (*)(void *, int)' <BitCast>
// CHECK-NEXT: ImplicitCastExpr 0x{{[^ ]*}} <col:6> 'struct PollResult<int> (*)(int *, int)' <FunctionToPointerDecay> part_of_explicit_cast
// CHECK-NEXT: DeclRefExpr 0x{{[^ ]*}} <col:6> 'struct PollResult<int> (int *, int)' lvalue BSCMethod 0x{{[^ ]*}} 'poll' 'struct PollResult<int> (int *, int)'
// CHECK-NEXT: CStyleCastExpr 0x{{[^ ]*}} <col:6> 'void (*)(void *)' <BitCast>
// CHECK-NEXT: ImplicitCastExpr 0x{{[^ ]*}} <col:6> 'void (*)(int *)' <FunctionToPointerDecay> part_of_explicit_cast
// CHECK-NEXT: DeclRefExpr 0x{{[^ ]*}} <col:6> 'void (int *)' lvalue BSCMethod 0x{{[^ ]*}} 'free' 'void (int *)'

trait Future<int> *f(trait Future<int> *a) {
    return a;
}
// CHECK: FunctionDecl 0x{{[^ ]*}} <line:[[@LINE-3]]:1, line:[[@LINE-1]]:1> line:[[@LINE-3]]:20 used f 'struct __Trait_Future<int> (struct __Trait_Future<int>)'
// CHECK-NEXT: ParmVarDecl 0x{{[^ ]*}} <col:22, col:41> col:41 used a 'struct __Trait_Future<int>':'struct __Trait_Future<int>'
// CHECK-NEXT: CompoundStmt 0x{{[^ ]*}} <col:44, line:[[@LINE-3]]:1>
// CHECK-NEXT: ReturnStmt 0x{{[^ ]*}} <line:[[@LINE-5]]:5, col:12>
// CHECK-NEXT: ImplicitCastExpr 0x{{[^ ]*}} <col:12> 'struct __Trait_Future<int>':'struct __Trait_Future<int>' <NoOp>
// CHECK-NEXT: DeclRefExpr 0x{{[^ ]*}} <col:12> 'struct __Trait_Future<int>':'struct __Trait_Future<int>' lvalue ParmVar 0x{{[^ ]*}} 'a' 'struct __Trait_Future<int>':'struct __Trait_Future<int>'

int main() {
    int m = 0;
    trait Future<int> *a = &m;
    int b = a->poll(10).c;
    f(a);
    return b - 10;
}
// CHECK: FunctionDecl 0x{{[^ ]*}} <line:[[@LINE-7]]:1, line:[[@LINE-1]]:1> line:[[@LINE-7]]:5 main 'int (void)'
// CHECK-NEXT: CompoundStmt 0x{{[^ ]*}} <col:12, line:[[@LINE-2]]:1>
// CHECK-NEXT: DeclStmt 0x{{[^ ]*}} <line:[[@LINE-8]]:5, col:14>
// CHECK-NEXT: VarDecl 0x{{[^ ]*}} <col:5, col:13> col:9 used m 'int' cinit
// CHECK-NEXT: IntegerLiteral 0x{{[^ ]*}} <col:13> 'int' 0
// CHECK-NEXT: DeclStmt 0x{{[^ ]*}} <line:[[@LINE-10]]:5, col:24>
// CHECK-NEXT: VarDecl 0x{{[^ ]*}} <col:5, col:24> col:24 used a 'struct __Trait_Future<int>':'struct __Trait_Future<int>' cinit
// CHECK-NEXT: InitListExpr 0x{{[^ ]*}} <col:28, <invalid sloc>> 'struct __Trait_Future<int>':'struct __Trait_Future<int>'
// CHECK-NEXT: ImplicitCastExpr 0x{{[^ ]*}} <col:28, col:29> 'void *' <BitCast>
// CHECK-NEXT: UnaryOperator 0x{{[^ ]*}} <col:28, col:29> 'int *' prefix '&' cannot overflow
// CHECK-NEXT: DeclRefExpr 0x{{[^ ]*}} <col:29> 'int' lvalue Var 0x{{[^ ]*}} 'm' 'int'
// CHECK-NEXT: UnaryOperator 0x{{[^ ]*}} <<invalid sloc>> 'struct __Trait_Future_Vtable<int> *' prefix '&' cannot overflow
// CHECK-NEXT: DeclRefExpr 0x{{[^ ]*}} <<invalid sloc>> 'struct __Trait_Future_Vtable<int>':'struct __Trait_Future_Vtable<int>' lvalue Var 0x{{[^ ]*}} '__int_trait_Future' 'struct __Trait_Future_Vtable<int>':'struct __Trait_Future_Vtable<int>'
// CHECK-NEXT: DeclStmt 0x{{[^ ]*}} <line:[[@LINE-17]]:5, col:26>
// CHECK-NEXT: VarDecl 0x{{[^ ]*}} <col:5, col:25> col:9 used b 'int' cinit
// CHECK-NEXT: MemberExpr 0x{{[^ ]*}} <col:13, col:25> 'int' .c 0x{{[^ ]*}}
// CHECK-NEXT: CallExpr 0x{{[^ ]*}} <col:13, col:23> 'struct PollResult<int>':'struct PollResult<int>'
// CHECK-NEXT: ImplicitCastExpr 0x{{[^ ]*}} <col:13, col:16> 'struct PollResult<int> (*)(void *, int)' <LValueToRValue>
// CHECK-NEXT: MemberExpr 0x{{[^ ]*}} <col:13, col:16> 'struct PollResult<int> (*)(void *, int)' lvalue ->poll 0x{{[^ ]*}}
// CHECK-NEXT: ImplicitCastExpr 0x{{[^ ]*}} <col:13> 'struct __Trait_Future_Vtable<int> *' <LValueToRValue>
// CHECK-NEXT: MemberExpr 0x{{[^ ]*}} <col:13> 'struct __Trait_Future_Vtable<int> *' lvalue .vtable 0x{{[^ ]*}}
// CHECK-NEXT: DeclRefExpr 0x{{[^ ]*}} <col:13> 'struct __Trait_Future<int>':'struct __Trait_Future<int>' lvalue Var 0x{{[^ ]*}} 'a' 'struct __Trait_Future<int>':'struct __Trait_Future<int>'
// CHECK-NEXT: ImplicitCastExpr 0x{{[^ ]*}} <col:13> 'void *' <LValueToRValue>
// CHECK-NEXT: MemberExpr 0x{{[^ ]*}} <col:13> 'void *' lvalue .data 0x{{[^ ]*}}
// CHECK-NEXT: DeclRefExpr 0x{{[^ ]*}} <col:13> 'struct __Trait_Future<int>':'struct __Trait_Future<int>' lvalue Var 0x{{[^ ]*}} 'a' 'struct __Trait_Future<int>':'struct __Trait_Future<int>'
// CHECK-NEXT: IntegerLiteral 0x{{[^ ]*}} <col:21> 'int' 10
// CHECK-NEXT: CallExpr 0x{{[^ ]*}} <line:[[@LINE-29]]:5, col:8> 'struct __Trait_Future<int>':'struct __Trait_Future<int>'
// CHECK-NEXT: ImplicitCastExpr 0x{{[^ ]*}} <col:5> 'struct __Trait_Future<int> (*)(struct __Trait_Future<int>)' <FunctionToPointerDecay>
// CHECK-NEXT: DeclRefExpr 0x{{[^ ]*}} <col:5> 'struct __Trait_Future<int> (struct __Trait_Future<int>)' Function 0x{{[^ ]*}} 'f' 'struct __Trait_Future<int> (struct __Trait_Future<int>)'
// CHECK-NEXT: ImplicitCastExpr 0x{{[^ ]*}} <col:7> 'struct __Trait_Future<int>':'struct __Trait_Future<int>' <NoOp>
// CHECK-NEXT: DeclRefExpr 0x{{[^ ]*}} <col:7> 'struct __Trait_Future<int>':'struct __Trait_Future<int>' lvalue Var 0x{{[^ ]*}} 'a' 'struct __Trait_Future<int>':'struct __Trait_Future<int>'
// CHECK-NEXT: ReturnStmt 0x{{[^ ]*}} <line:[[@LINE-33]]:5, col:16>
// CHECK-NEXT: BinaryOperator 0x{{[^ ]*}} <col:12, col:16> 'int' '-'
// CHECK-NEXT: ImplicitCastExpr 0x{{[^ ]*}} <col:12> 'int' <LValueToRValue>
// CHECK-NEXT: DeclRefExpr 0x{{[^ ]*}} <col:12> 'int' lvalue Var 0x{{[^ ]*}} 'b' 'int'
// CHECK-NEXT: IntegerLiteral 0x{{[^ ]*}} <col:16> 'int' 10