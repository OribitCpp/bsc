// RUN: %clang %s -o %t.output
// RUN: %t.output
// RUN: %clang -rewrite-bsc %s -o %t-rw.c
// RUN: FileCheck --input-file=%t-rw.c %s
// RUN: %clang %t-rw.c -o %t-rw.output
// RUN: %t-rw.output
// expected-no-diagnostics

struct PollResult<T> {
    int c;
};

trait Future<T> {
    struct PollResult<T> poll(This* this, T a);
    void free(This* this);
};

struct PollResult<int> int::poll(int* this, int a) {
    struct PollResult<int> p;
    p.c = a;
    return p;
}

void int::free(int* this) {}

impl trait Future<int> for int;

trait Future<T> *f<T>(trait Future<T> *a) {
    return a;
}

int main() {
    int m = 0;
    trait Future<int> *a = &m;
    f<int>(a);
    return 0;
}

// CHECK:      struct PollResult_int {
// CHECK-NEXT:   int c;
// CHECK-NEXT: };
// CHECK-EMPTY:
// CHECK-NEXT: struct __Trait_Future_Vtable_int {
// CHECK-NEXT:   struct PollResult_int (*poll)(void *, int);
// CHECK-NEXT:   void (*free)(void *);
// CHECK-NEXT: };
// CHECK-EMPTY:
// CHECK-NEXT: struct __Trait_Future_int {
// CHECK-NEXT:   void *data;
// CHECK-NEXT:   struct __Trait_Future_Vtable_int *vtable;
// CHECK-NEXT: };
// CHECK-EMPTY:
// CHECK-NEXT: struct __Trait_Future_int f_int(struct __Trait_Future_int a);
// CHECK-EMPTY:
// CHECK-NEXT: struct PollResult_int int_poll(int *this, int a) {
// CHECK-NEXT:   struct PollResult_int p;
// CHECK-NEXT:   p.c = a;
// CHECK-NEXT:   return p;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: void int_free(int *this) {
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: struct __Trait_Future_Vtable_int __int_trait_Future = {.poll = (struct PollResult_int (*)(void *, int))int_poll, .free = (void (*)(void *))int_free};
// CHECK-EMPTY:
// CHECK-NEXT: int main(void) {
// CHECK-NEXT:   int m = 0;
// CHECK-NEXT:   struct __Trait_Future_int a = {&m, &__int_trait_Future};
// CHECK-NEXT:   f_int(a);
// CHECK-NEXT:   return 0;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: struct __Trait_Future_int f_int(struct __Trait_Future_int a) {
// CHECK-NEXT:   return a;
// CHECK-NEXT: }