// RUN: %clang %s -o %t.output
// RUN: %t.output
// RUN: %clang -rewrite-bsc %S/trait.hbs -o %T/trait.h
// RUN: %clang -rewrite-bsc %s -o %t-rw.c
// RUN: FileCheck --input-file=%t-rw.c %s
// RUN: %clang %t-rw.c -o %t-rw.output
// RUN: %t-rw.output
// expected-no-diagnostics

#include "trait.hbs"

int int::foo(int* this) {
  return 10;
}

impl trait F<int> for int;

int main() {
  int a = 1;
  int b = ((trait F<int>*)&a)->foo();
  return b - 10;
}

// CHECK: int int_foo(int *this) {
// CHECK-NEXT: return 10;
// CHECK-NEXT: }

// CHECK: struct __Trait_F_Vtable_int __int_trait_F = {.foo = (int (*)(void *))int_foo};

// CHECK: int main(void) {
// CHECK-NEXT: int a = 1;
// CHECK-NEXT: int b = (struct __Trait_F_int){&a, &__int_trait_F}.vtable->foo((struct __Trait_F_int){&a, &__int_trait_F}.data);
// CHECK-NEXT: return b - 10;
// CHECK-NEXT: }