// RUN: %clang %s -o %t.output
// RUN: %t.output
// RUN: %clang -rewrite-bsc %s -o %t-rw.c
// RUN: FileCheck --input-file=%t-rw.c %s
// RUN: %clang %t-rw.c -o %t-rw.output
// RUN: %t-rw.output
// expected-no-diagnostics

trait Shape_Shape_Shape {
    int getSideLen(This* this);
};

struct Rectangle_Rectangle_Rectangle {
    int width;
    int hight;
};

int struct Rectangle_Rectangle_Rectangle::getSideLen(struct Rectangle_Rectangle_Rectangle* this) {
    int length = (this->width + this->hight) * 2;
    return length;
}

impl trait Shape_Shape_Shape for struct Rectangle_Rectangle_Rectangle;

int main() {
    struct Rectangle_Rectangle_Rectangle r = {.width = 2, .hight = 3};
    trait Shape_Shape_Shape* shape = &r;
    int len = shape->getSideLen();
    return len - 10;
}

// CHECK:      struct __Trait_Shape_Shape_Shape_Vtable {
// CHECK-NEXT:   int (*getSideLen)(void *);
// CHECK-NEXT: };

// CHECK:      struct __Trait_Shape_Shape_Shape {
// CHECK-NEXT:   void *data;
// CHECK-NEXT:   struct __Trait_Shape_Shape_Shape_Vtable *vtable;
// CHECK-NEXT: };

// CHECK:      struct __Trait_Shape_Shape_Shape_Owned {
// CHECK-NEXT:     void * data;
// CHECK-NEXT:     struct __Trait_Shape_Shape_Shape_Vtable *vtable;
// CHECK-NEXT: };

// CHECK:      struct __Trait_Shape_Shape_Shape_Borrow {
// CHECK-NEXT:     void * data;
// CHECK-NEXT:     struct __Trait_Shape_Shape_Shape_Vtable *vtable;
// CHECK-NEXT: };

// CHECK:      struct Rectangle_Rectangle_Rectangle {
// CHECK-NEXT:   int width;
// CHECK-NEXT:   int hight;
// CHECK-NEXT: };

// CHECK:      int struct_Rectangle_Rectangle_Rectangle_getSideLen(struct Rectangle_Rectangle_Rectangle *this) {
// CHECK-NEXT:   int length = (this->width + this->hight) * 2;
// CHECK-NEXT:   return length;
// CHECK-NEXT: }

// CHECK:      struct __Trait_Shape_Shape_Shape_Vtable __struct_Rectangle_Rectangle_Rectangle_trait_Shape_Shape_Shape = {.getSideLen = (int (*)(void *))struct_Rectangle_Rectangle_Rectangle_getSideLen};

// CHECK:      int main(void) {
// CHECK-NEXT:   struct Rectangle_Rectangle_Rectangle r = {.width = 2, .hight = 3};
// CHECK-NEXT:   struct __Trait_Shape_Shape_Shape shape = {&r, &__struct_Rectangle_Rectangle_Rectangle_trait_Shape_Shape_Shape};
// CHECK-NEXT:   int len = shape.vtable->getSideLen(shape.data);
// CHECK-NEXT:   return len - 10;
// CHECK-NEXT: }