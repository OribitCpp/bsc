// RUN: %clang %s -o %t.output
// RUN: %t.output
// expected-no-diagnostics

trait F {
   void foo(This *this);
};

struct S<T> {
  trait F* t;
};

void int::foo(This *this) {}

impl trait F for int;

trait F* get1<T>(trait F* t1, trait F* t2) {
    return t1;
}

int main()
{
    int a = 1;
    const int *p = &a;
    trait F* t1 = p;
    t1 = (trait F*)p;
    t1->foo();
    if (t1 != p) {
        return 1;
    }
    struct S<int> s = { p };
    struct S<int> s1 = { .t = p };
    s.t = p;
    trait F* p5 = get1<double>((trait F*)p, p);
    return 0;
}


