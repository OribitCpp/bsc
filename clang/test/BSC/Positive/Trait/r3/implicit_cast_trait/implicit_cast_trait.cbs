// RUN: %clang %s -o %t.output
// RUN: %t.output
// RUN: %clang -rewrite-bsc %s -o %t-rw.c
// RUN: FileCheck --input-file=%t-rw.c %s
// RUN: %clang %t-rw.c -o %t-rw.output
// RUN: %t-rw.output
// expected-no-diagnostics

#include<stdlib.h>
trait F {
  int foo(This* this);
};

int int::foo(int* this) {
  return 0;
}

impl trait F for int;

trait F* get(trait F* f) {
  int* c = malloc(sizeof(int));
  *c = 3;
  return c;
};

int main() {
  int a = 1;
  trait F* b = get(&a);
  return b->foo();
}

// CHECK:      #include <stdlib.h>
// CHECK-EMPTY:
// CHECK-EMPTY:
// CHECK-NEXT: struct __Trait_F_Vtable;
// CHECK-NEXT: struct __Trait_F;
// CHECK-NEXT: struct __Trait_F_Owned;
// CHECK-NEXT: struct __Trait_F_Borrow;
// CHECK-NEXT: struct __Trait_F_Vtable {
// CHECK-NEXT:   int (*foo)(void *);
// CHECK-NEXT: };
// CHECK-EMPTY:
// CHECK-NEXT: struct __Trait_F {
// CHECK-NEXT:   void *data;
// CHECK-NEXT:   struct __Trait_F_Vtable *vtable;
// CHECK-NEXT: };
// CHECK-EMPTY:
// CHECK-NEXT: struct __Trait_F_Owned {
// CHECK-NEXT:     void * data;
// CHECK-NEXT:     struct __Trait_F_Vtable *vtable;
// CHECK-NEXT: };
// CHECK-EMPTY:
// CHECK-NEXT: struct __Trait_F_Borrow {
// CHECK-NEXT:   void * data;
// CHECK-NEXT:   struct __Trait_F_Vtable *vtable;
// CHECK-NEXT: };
// CHECK-EMPTY:
// CHECK-NEXT: int int_foo(int *this) {
// CHECK-NEXT:   return 0;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: struct __Trait_F_Vtable __int_trait_F = {.foo = (int (*)(void *))int_foo};
// CHECK-EMPTY:
// CHECK-NEXT: struct __Trait_F get(struct __Trait_F f) {
// CHECK-NEXT:   int *c = malloc(sizeof(int));
// CHECK-NEXT:   *c = 3;
// CHECK-NEXT:   return (struct __Trait_F){.data = c, .vtable = &__int_trait_F};
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: int main(void) {
// CHECK-NEXT:   int a = 1;
// CHECK-NEXT:   struct __Trait_F b = get((struct __Trait_F){.data = &a, .vtable = &__int_trait_F});
// CHECK-NEXT:   return b.vtable->foo(b.data);
// CHECK-NEXT: }