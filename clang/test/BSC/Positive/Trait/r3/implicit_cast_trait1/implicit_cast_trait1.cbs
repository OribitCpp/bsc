// RUN: %clang %s -o %t.output
// RUN: %t.output
// RUN: %clang -rewrite-bsc %s -o %t-rw.c
// RUN: FileCheck --input-file=%t-rw.c %s
// RUN: %clang %t-rw.c -o %t-rw.output
// RUN: %t-rw.output
// expected-no-diagnostics

trait F {
  int foo(This* this);
};

int int::foo(int* this) {
  return 2;
}

impl trait F for int;

int main() {
  int a = 1;
  trait F* f = &a, *g = &a;
  int b = f->foo();
  int c = g->foo();
  return b - c;
}

// CHECK: struct __Trait_F_Vtable {
// CHECK-NEXT: int (*foo)(void *);
// CHECK-NEXT: };

// CHECK: struct __Trait_F {
// CHECK-NEXT: void *data;
// CHECK-NEXT: struct __Trait_F_Vtable *vtable;
// CHECK-NEXT: };
 
// CHECK: int int_foo(int *this) {
// CHECK-NEXT: return 2;
// CHECK-NEXT: }
 
// CHECK: struct __Trait_F_Vtable __int_trait_F = {.foo = (int (*)(void *))int_foo};

// CHECK: int main(void) {
// CHECK-NEXT: int a = 1;
// CHECK-NEXT: struct __Trait_F f = {&a, &__int_trait_F}, g = {&a, &__int_trait_F};
// CHECK-NEXT: int b = f.vtable->foo(f.data);
// CHECK-NEXT: int c = g.vtable->foo(g.data);
// CHECK-NEXT: return b - c;
// CHECK-NEXT: }