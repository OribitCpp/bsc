// RUN: %clang -rewrite-bsc %S/rewrite_bsc_generic_header.hbs -o %T/rewrite_bsc_generic_header.h
// RUN: %clang -rewrite-bsc %s -o %t-rw.c
// RUN: FileCheck --input-file=%t-rw.c %s
// RUN: %clang %t-rw.c -o %t-rw.output
// RUN: %t-rw.output


#include "rewrite_bsc_generic_header.hbs"

int int::increase(int* this) {
  return *this += 1;
}

int main() {
  int a1 = 1;
  int b1 = 2;
  b1.increase();
  int::increase(&b1);
  int c1 = max<int, int>(a1, b1);
  float c2 = max<float, float>(1.0, 2.0);
  struct Foo<int> foo = {.a = 42};
  struct Foo<float> foo_2 = {.a = 1.5};
  return 0;
}

// CHECK:      struct Foo_int {
// CHECK-NEXT:   int a;
// CHECK-NEXT: };
// CHECK-EMPTY:
// CHECK-NEXT: struct Foo_float {
// CHECK-NEXT:   float a;
// CHECK-NEXT: };
// CHECK-EMPTY:
// CHECK-NEXT: static int max_int_int(int a, int b);
// CHECK-EMPTY:
// CHECK-NEXT: static float max_float_float(float a, float b);
// CHECK-EMPTY:
// CHECK-NEXT: int int_increase(int *this);
// CHECK-EMPTY:
// CHECK-NEXT: int int_increase(int *this) {
// CHECK-NEXT:   return *this += 1;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: int main(void) {
// CHECK-NEXT:   int a1 = 1;
// CHECK-NEXT:   int b1 = 2;
// CHECK-NEXT:   int_increase(&b1);
// CHECK-NEXT:   int_increase(&b1);
// CHECK-NEXT:   int c1 = max_int_int(a1, b1);
// CHECK-NEXT:   float c2 = max_float_float(1., 2.);
// CHECK-NEXT:   struct Foo_int foo = {.a = 42};
// CHECK-NEXT:   struct Foo_float foo_2 = {.a = 1.5};
// CHECK-NEXT:   return 0;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: static int max_int_int(int a, int b)   {
// CHECK-NEXT:   int x = 1;
// CHECK-NEXT:   int_increase(&x);
// CHECK-NEXT:   int c = int_increase(&x);
// CHECK-NEXT:   return a > b ? a : b;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: static float max_float_float(float a, float b)   {
// CHECK-NEXT:   int x = 1;
// CHECK-NEXT:   int_increase(&x);
// CHECK-NEXT:   int c = int_increase(&x);
// CHECK-NEXT:   return a > b ? a : b;
// CHECK-NEXT: }
