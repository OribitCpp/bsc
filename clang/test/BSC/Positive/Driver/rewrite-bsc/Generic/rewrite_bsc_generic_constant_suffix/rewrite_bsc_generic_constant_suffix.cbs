// RUN: %clang -rewrite-bsc %s -o %t-rw.c
// RUN: FileCheck --input-file=%t-rw.c %s
// RUN: %clang %t-rw.c -o %t-rw.output
// RUN: %t-rw.output

#include <stdbool.h>
typedef short MyShort;

short foo1<short N>() {
    return N;
}
unsigned short foo2<unsigned short N>() {
    return N;
}
MyShort foo3<MyShort N>() {
    return N;
}
short foo4<T, short N>() {
    return N;
}
short foo5<short N>() {
    short a = N;
    return a;
}
void foo6<short N1, short N2>()
{
    int arr[N1 + N2];
    for (int i = 0; i < N1 + N2; i++) {
        arr[i] = i;
    }
}
bool foo8<bool N>() {
    return N;
}
struct S<short N> {
    short a;
};
void struct S<short N>::bar(struct S<short N>* this) {
    this->a = N;
}
int main() {
    int a1_0 = foo1<5>();
    int a1_1 = foo1<-5>();
    int a2 = foo2<5>();
    int a3_0 = foo3<5>();
    int a3_1 = foo3<-5>();
    int a4_0 = foo4<int, 5>();
    int a4_1 = foo4<int, -5>();
    int a5_0 = foo5<5>();
    int a5_1 = foo5<-5>();
    foo6<5, 10>();
    int a8_0 = foo8<true>();
    int a8_1 = foo8<-5>();
    int a8_2 = foo8<0>();
    struct S<5> s;
    s.bar();
    return 0;
}

// CHECK:      #include <stdbool.h>
// CHECK-EMPTY:
// CHECK-EMPTY:
// CHECK-NEXT: struct S_5;
// CHECK-NEXT: typedef short MyShort;
// CHECK-EMPTY:
// CHECK-NEXT: struct S_5 {
// CHECK-NEXT:   short a;
// CHECK-NEXT: };
// CHECK-EMPTY:
// CHECK-NEXT: static short foo1_5(void);
// CHECK-EMPTY:
// CHECK-NEXT: static short foo1_n5(void);
// CHECK-EMPTY:
// CHECK-NEXT: static unsigned short foo2_5(void);
// CHECK-EMPTY:
// CHECK-NEXT: static MyShort foo3_5(void);
// CHECK-EMPTY:
// CHECK-NEXT: static MyShort foo3_n5(void);
// CHECK-EMPTY:
// CHECK-NEXT: static short foo4_int_5(void);
// CHECK-EMPTY:
// CHECK-NEXT: static short foo4_int_n5(void);
// CHECK-EMPTY:
// CHECK-NEXT: static short foo5_5(void);
// CHECK-EMPTY:
// CHECK-NEXT: static short foo5_n5(void);
// CHECK-EMPTY:
// CHECK-NEXT: static void foo6_5_10(void);
// CHECK-EMPTY:
// CHECK-NEXT: static _Bool foo8_1(void);
// CHECK-EMPTY:
// CHECK-NEXT: static _Bool foo8_0(void);
// CHECK-EMPTY:
// CHECK-NEXT: static void struct_S_5_bar(struct S_5 *this);
// CHECK-EMPTY:
// CHECK-NEXT: int main(void) {
// CHECK-NEXT:   int a1_0 = foo1_5();
// CHECK-NEXT:   int a1_1 = foo1_n5();
// CHECK-NEXT:   int a2 = foo2_5();
// CHECK-NEXT:   int a3_0 = foo3_5();
// CHECK-NEXT:   int a3_1 = foo3_n5();
// CHECK-NEXT:   int a4_0 = foo4_int_5();
// CHECK-NEXT:   int a4_1 = foo4_int_n5();
// CHECK-NEXT:   int a5_0 = foo5_5();
// CHECK-NEXT:   int a5_1 = foo5_n5();
// CHECK-NEXT:   foo6_5_10();
// CHECK-NEXT:   int a8_0 = foo8_1();
// CHECK-NEXT:   int a8_1 = foo8_1();
// CHECK-NEXT:   int a8_2 = foo8_0();
// CHECK-NEXT:   struct S_5 s;
// CHECK-NEXT:   struct_S_5_bar(&s);
// CHECK-NEXT:   return 0;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: static short foo1_5(void) {
// CHECK-NEXT:   return 5;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: static short foo1_n5(void) {
// CHECK-NEXT:   return -5;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: static unsigned short foo2_5(void) {
// CHECK-NEXT:   return 5;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: static MyShort foo3_5(void) {
// CHECK-NEXT:   return 5;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: static MyShort foo3_n5(void) {
// CHECK-NEXT:   return -5;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: static short foo4_int_5(void) {
// CHECK-NEXT:   return 5;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: static short foo4_int_n5(void) {
// CHECK-NEXT:   return -5;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: static short foo5_5(void) {
// CHECK-NEXT:   short a = 5;
// CHECK-NEXT:   return a;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: static short foo5_n5(void) {
// CHECK-NEXT:   short a = -5;
// CHECK-NEXT:   return a;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: static void foo6_5_10(void) {
// CHECK-NEXT:   int arr[15];
// CHECK-NEXT:   for (int i = 0; i < 5 + 10; i++) {
// CHECK-NEXT:     arr[i] = i;
// CHECK-NEXT:   }
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: static _Bool foo8_1(void) {
// CHECK-NEXT:   return 1;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: static _Bool foo8_0(void) {
// CHECK-NEXT:   return 0;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: static void struct_S_5_bar(struct S_5 *this) {
// CHECK-NEXT:   this->a = 5;
// CHECK-NEXT: }
