// RUN: %clang -rewrite-bsc %s -o %t-rw.c
// RUN: FileCheck --input-file=%t-rw.c %s
// RUN: %clang %t-rw.c -I %S -o %t-rw.output
// RUN: %t-rw.output


struct S<T> {};
typedef struct {
  struct S<int> a;
}MyStruct;

typedef union {
  int a;
}MyUnion;

typedef enum {
  X1,
  X2
}MyEnum;

int main() {
  return 0;
}


// CHECK:      typedef struct _TD_MyStruct MyStruct;
// CHECK-EMPTY:
// CHECK-NEXT: typedef union _TD_MyUnion MyUnion;
// CHECK-EMPTY:
// CHECK-NEXT: enum _TD_MyEnum {
// CHECK-NEXT:   X1,
// CHECK-NEXT:   X2
// CHECK-NEXT: };
// CHECK-EMPTY:
// CHECK-NEXT: typedef enum _TD_MyEnum MyEnum;
// CHECK-EMPTY:
// CHECK-NEXT: struct S_int {
// CHECK-NEXT: };
// CHECK-EMPTY:
// CHECK-NEXT: union _TD_MyUnion {
// CHECK-NEXT:   int a;
// CHECK-NEXT: };
// CHECK-EMPTY:
// CHECK-NEXT: struct _TD_MyStruct {
// CHECK-NEXT:     struct S_int a;
// CHECK-NEXT: };
// CHECK-EMPTY:
// CHECK-NEXT: int main() {
// CHECK-NEXT:     return 0;
// CHECK-NEXT: }
