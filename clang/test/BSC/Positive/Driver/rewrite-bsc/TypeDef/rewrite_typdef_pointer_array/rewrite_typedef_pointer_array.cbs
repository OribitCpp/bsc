// RUN: %clang -rewrite-bsc %s -o %t-rw.c
// RUN: FileCheck --input-file=%t-rw.c %s
// RUN: %clang %t-rw.c -o %t-rw.output
// RUN: %t-rw.output

typedef MyLongInt = long int;

MyLongInt ArraySum<MyLongInt N>(MyLongInt arr[]) {
  MyLongInt sum = 0;
  for (MyLongInt i = 0; i < N; i++) {
    arr[i] = i;
    sum += arr[i];
  }
  return sum;
}

MyLongInt** ArrayPoint<MyLongInt N>(MyLongInt *arr[]) {
  MyLongInt sum = 0;
  for (MyLongInt i = 0; i < N; i++) {
    arr[i] = &i;
    sum += *arr[i];
  }
  return arr;
}


int main() {
  MyLongInt arr[5];
  MyLongInt res = ArraySum<5>(arr);
  MyLongInt *ap[5];
  MyLongInt** res2 = ArrayPoint<5>(ap);
}

// CHECK:      typedef long MyLongInt;
// CHECK-EMPTY:
// CHECK-NEXT: static MyLongInt ArraySum_5(MyLongInt arr[]);
// CHECK-EMPTY:
// CHECK-NEXT: static MyLongInt **ArrayPoint_5(MyLongInt *arr[]);
// CHECK-EMPTY:
// CHECK-NEXT: int main(void) {
// CHECK-NEXT:   MyLongInt arr[5];
// CHECK-NEXT:   MyLongInt res = ArraySum_5(arr);
// CHECK-NEXT:   MyLongInt *ap[5];
// CHECK-NEXT:   MyLongInt **res2 = ArrayPoint_5(ap);
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: static MyLongInt ArraySum_5(MyLongInt arr[]) {
// CHECK-NEXT:   MyLongInt sum = 0;
// CHECK-NEXT:   for (MyLongInt i = 0; i < 5L; i++) {
// CHECK-NEXT:     arr[i] = i;
// CHECK-NEXT:     sum += arr[i];
// CHECK-NEXT:   }
// CHECK-NEXT:   return sum;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: static MyLongInt **ArrayPoint_5(MyLongInt *arr[]) {
// CHECK-NEXT:   MyLongInt sum = 0;
// CHECK-NEXT:   for (MyLongInt i = 0; i < 5L; i++) {
// CHECK-NEXT:     arr[i] = &i;
// CHECK-NEXT:     sum += *arr[i];
// CHECK-NEXT:   }
// CHECK-NEXT:   return arr;
// CHECK-NEXT: }