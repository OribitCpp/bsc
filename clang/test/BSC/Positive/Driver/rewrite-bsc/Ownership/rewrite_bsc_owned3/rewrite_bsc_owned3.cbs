// RUN: %clang -rewrite-bsc %s -o %t-rw.c
// RUN: FileCheck --input-file=%t-rw.c %s
// RUN: %clang %t-rw.c -o %t-rw.output
// RUN: %t-rw.output

struct A {
    owned int a;
};

struct B {
    owned int b;
};

struct C {
    owned int** c;
};

struct D { struct C c; };

struct E {
    int owned e;
};

struct F {
    int* owned f;
};

struct G {
    int** owned g;
};

struct H {
    int* owned *  h;
};

owned int (a)();

owned int* (b)();

owned int** (c)();


// as return type
owned int case1() {
  return 0;
}

owned int* case2() {
  return 0;
}

owned int** case3() {
  return 0;
}

// as param type
owned int case5(owned int a) {
  return a;
}

int case6(owned int* a) {
  return 0;
}

int case7(owned int** a) {
  return 0;
}

// as local var type
owned int case8() {
  owned int a = 1;
  return a;
}

int case9() {
  owned int* a = 0;
  return 0;
}

int case10() {
  owned int** a = 0;
  return 0;
}

int case11() {
  (owned int*)0;  
  return 0;
}

int main() {
    struct D * d;
    return 0;
}

// CHECK:      struct A {
// CHECK-NEXT:      int a;
// CHECK-NEXT: };
// CHECK-EMPTY:
// CHECK-NEXT: struct B {
// CHECK-NEXT:      int b;
// CHECK-NEXT: };
// CHECK-EMPTY:
// CHECK-NEXT: struct C {
// CHECK-NEXT:      int **c;
// CHECK-NEXT: };
// CHECK-EMPTY:
// CHECK-NEXT: struct E {
// CHECK-NEXT:      int e;
// CHECK-NEXT: };
// CHECK-EMPTY:
// CHECK-NEXT: struct F {
// CHECK-NEXT:     int * f;
// CHECK-NEXT: };
// CHECK-EMPTY:
// CHECK-NEXT: struct G {
// CHECK-NEXT:     int ** g;
// CHECK-NEXT: };
// CHECK-EMPTY:
// CHECK-NEXT: struct H {
// CHECK-NEXT:     int * *h;
// CHECK-NEXT: };
// CHECK-EMPTY:
// CHECK-NEXT: struct D { 
// CHECK-NEXT:     struct C c;
// CHECK-NEXT: };
// CHECK-EMPTY:
// CHECK-NEXT:  int (a)(void);
// CHECK-EMPTY:
// CHECK-NEXT:  int *(b)(void);
// CHECK-EMPTY:
// CHECK-NEXT:  int **(c)(void);
// CHECK-EMPTY:
// CHECK-NEXT:  int case1(void) {
// CHECK-NEXT:     return 0;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT:  int *case2(void) {
// CHECK-NEXT:     return 0;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT:  int **case3(void) {
// CHECK-NEXT:     return 0;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT:  int case5( int a) {
// CHECK-NEXT:     return a;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: int case6( int *a) {
// CHECK-NEXT:     return 0;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: int case7( int **a) {
// CHECK-NEXT:     return 0;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT:  int case8(void) {
// CHECK-NEXT:      int a = 1;
// CHECK-NEXT:     return a;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: int case9(void) {
// CHECK-NEXT:      int *a = 0;
// CHECK-NEXT:     return 0;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: int case10(void) {
// CHECK-NEXT:      int **a = 0;
// CHECK-NEXT:     return 0;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: int case11(void) {
// CHECK-NEXT:     ( int *)0;
// CHECK-NEXT:     return 0;
// CHECK-NEXT: }
// CHECK-EMPTY:
// CHECK-NEXT: int main(void) {
// CHECK-NEXT:     struct D *d;
// CHECK-NEXT:     return 0;
// CHECK-NEXT: }
