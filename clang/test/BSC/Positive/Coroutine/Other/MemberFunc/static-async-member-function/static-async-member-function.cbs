// RUN: %clang %s -o %test.output
// RUN: %test.output
// RUN: %clang -rewrite-bsc %S/../../../../../../../lib/Headers/bsc_include/future.hbs -o %T/future.h
// RUN: %clang -rewrite-bsc %s -o %t-rw.c
// RUN: FileCheck --input-file=%t-rw.c %s
// RUN: %clang %t-rw.c -o %t-rw.output
// RUN: %t-rw.output
// expected-no-diagnostics

#include "future.hbs"
#include <stdlib.h>

async int read(int a) {
  return 0;
}

static async int int::g() {
    trait Future<int>* a = read(1);
    int tmp = await a;
    return tmp;
}

async int int::f() {
    await int::g();
    return 0;
}

int main() {
  trait Future<int>* this = int::f();
  this->poll();
  this->free();
  return 0;
}

//CHECK: void struct__Futureg_free(struct _Futureg *this) {
//CHECK-NEXT:     if (this->Ft_1.data != 0) {
//CHECK-NEXT:         this->Ft_1.vtable->free(this->Ft_1.data);
//CHECK-NEXT:         this->Ft_1.data = (void *)0;
//CHECK-NEXT:     }
//CHECK-NEXT: }

//CHECK: struct PollResult_int struct__Futuref_poll(struct _Futuref *this) {
//CHECK-NEXT:     switch (this->__future_state) {
//CHECK-NEXT:       case 0:
//CHECK-NEXT:         goto __L0;
//CHECK-NEXT:       case 1:
//CHECK-NEXT:         goto __L1;
//CHECK-NEXT:     }
//CHECK-NEXT:   __L0:
//CHECK-NEXT:     ;
//CHECK-NEXT:     this->Ft_1 = int___g();
//CHECK-NEXT:   __L1:
//CHECK-NEXT:     ;
//CHECK-NEXT:     int Res_1;
//CHECK-NEXT:     struct PollResult_int PR_1 = struct__Futureg_poll(&this->Ft_1);
//CHECK-NEXT:     if (struct_PollResult_int_is_completed(&PR_1, &Res_1)) {
//CHECK-NEXT:         struct__Futureg_free(&this->Ft_1);
//CHECK-NEXT:     } else {
//CHECK-NEXT:         this->__future_state = 1;
//CHECK-NEXT:         return struct_PollResult_int_pending();
//CHECK-NEXT:     }
//CHECK-NEXT:     Res_1;
//CHECK-NEXT:     {
//CHECK-NEXT:     this->__future_state = -1;
//CHECK-NEXT:     int __RES_RETURN = 0;
//CHECK-NEXT:     return struct_PollResult_int_completed(__RES_RETURN);
//CHECK-NEXT:     }
//CHECK-NEXT: }