// RUN: %clang %s -o %test.output
// RUN: %test.output
// RUN: %clang -rewrite-bsc %S/../../../../../../lib/Headers/bsc_include/future.hbs -o %T/future.h
// RUN: %clang -rewrite-bsc %s -o %t-rw.c
// RUN: %clang %t-rw.c -o %t-rw.output
// RUN: %t-rw.output
// expected-no-diagnostics

#include "future.hbs"
#include <stdlib.h>
T* owned malloc_owned<T>(T value) {
    T * p = (T *) malloc( sizeof(T) );
    *p = value;
    return (T* owned)p;
}

void free_owned<T>(T* owned p) {
        free( (T*)p );
}

struct Owned<T> {
    T* owned p;
};

struct Owned<T> make_owned<T>(T value) {
    struct Owned<T> ret= {.p = malloc_owned(value)};
    return ret;
}

async int f() {
    return 0;
}

async int foo() {
    struct Owned<int> q = make_owned(2);
    int a = await f();
    int * p = (int *) q.p;
    return a;
}

int main() {
    return 0;
}