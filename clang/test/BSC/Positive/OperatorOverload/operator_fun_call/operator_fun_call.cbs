// RUN: %clang %s -o %test.output
// RUN: %test.output
// RUN: %clang -rewrite-bsc %s -o %t-rw.c
// RUN: FileCheck --input-file=%t-rw.c %s
// RUN: %clang %t-rw.c -o %t-rw.output
// RUN: %t-rw.output
// expected-no-diagnostics

struct square
{
    int width;
    int height;
};

__attribute__((operator +))
struct square squareAdd(struct square s1, struct square s2){
    struct square s = {s1.width + s2.width, s1.height + s2.height};
    return s;
}

__attribute__((operator !=))
_Bool squareNotEqual(struct square s1, struct square s2){
    return s1.width != s2.width || s1.height != s2.height;
}

int main(){
    struct square s1 = {100, 50};
    struct square s2 = {60, 110};
    struct square s3 = squareAdd(s1, s2);
    struct square s4 = s1 + s2;
    if (s3 != s4) {
        return 1;
    }
    if (squareNotEqual(s3, s4)) {
        return 1;
    }
    return 0;
}

// CHECK:      struct square;
// CHECK-NEXT: struct square
// CHECK-NEXT: {
// CHECK-NEXT:     int width;
// CHECK-NEXT:     int height;
// CHECK-NEXT: };
// CHECK-EMPTY: 
// CHECK:      struct square squareAdd(struct square s1, struct square s2) {
// CHECK-NEXT:     struct square s = {s1.width + s2.width, s1.height + s2.height};
// CHECK-NEXT:     return s;
// CHECK-NEXT: }
// CHECK-EMPTY: 
// CHECK:      _Bool squareNotEqual(struct square s1, struct square s2) {
// CHECK-NEXT:     return s1.width != s2.width || s1.height != s2.height;
// CHECK-NEXT: }
// CHECK-EMPTY: 
// CHECK:      int main(void) {
// CHECK-NEXT:     struct square s1 = {100, 50};
// CHECK-NEXT:     struct square s2 = {60, 110};
// CHECK-NEXT:     struct square s3 = squareAdd(s1, s2);
// CHECK-NEXT:     struct square s4 = squareAdd(s1, s2);
// CHECK-NEXT:     if (squareNotEqual(s3, s4)) {
// CHECK-NEXT:         return 1;
// CHECK-NEXT:     }
// CHECK-NEXT:     if (squareNotEqual(s3, s4)) {
// CHECK-NEXT:         return 1;
// CHECK-NEXT:     }
// CHECK-NEXT:     return 0;
// CHECK-NEXT: }
// CHECK-EMPTY: 
