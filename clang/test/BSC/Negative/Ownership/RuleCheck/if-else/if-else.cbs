// RUN: %clang_cc1 -verify %s

void func1(int num) {
    int b = 5;
    int * owned p = (int * owned)&b;
    int * owned a;
    if (num > 0) {
        a = p;
    } else {
        a = p;
    }
} // expected-error {{memory leak of value: `a`}}

void func2(int num) {
    int b = 5;
    int * owned p = (int * owned)&b;
    int * owned a;
    if (num > 0) {
        a = p;
    }
} // expected-error {{memory leak of value: `p`}} expected-error {{memory leak of value: `a`}}

void func3(int num) {
    int b = 5;
    int * owned p = (int * owned)&b;
    int * owned a;
    if (num > 0) {
        a = p;
    } else {}
} // expected-error {{memory leak of value: `p`}} expected-error {{memory leak of value: `a`}}

void func4(int num, int * owned a) {
    int * owned b;
    if (num > 0)
        b = a;
} // expected-error {{memory leak of value: `a`}} expected-error {{memory leak of value: `b`}}

void func5(int num, int * owned a) {
    int n = 1;
    int * owned b = (int * owned)&n;
    if (num > 5) {
        int * owned c = b;
        if (num > 10) {
            b = a;
        }
    } else if (num < - 10) { // expected-error {{memory leak of value: `c`}}
        b = a; // expected-error {{assign to owned value: `b`}}
    } else {
        b = a; // expected-error {{assign to owned value: `b`}}
    }
} // expected-error {{memory leak of value: `a`}} expected-error {{memory leak of value: `b`}}

void func6(int num, int * owned a) {
    int n = 1;
    int * owned b = (int * owned)&n;
    if (num > 5) {
        int * owned c = b;
        if (num > 10) {
            b = a;
        } else {
            b = a;
        }
    } else if (num < - 10) { // expected-error {{memory leak of value: `c`}}
        b = a; // expected-error {{assign to owned value: `b`}}
    } else {
        b = a; // expected-error {{assign to owned value: `b`}}
    }
} // expected-error {{memory leak of value: `b`}}

void func7(int num, int * owned a) {
    int n = 1;
    int * owned b = (int * owned)&n;
    if (num > 5) {
        int * owned c = b;
        b = a;
    } else if (num < -10) { // expected-error {{memory leak of value: `c`}}
        b = a; // expected-error {{assign to owned value: `b`}}
    }
} // expected-error {{memory leak of value: `a`}} expected-error {{memory leak of value: `b`}}

void func8(int num, int * owned argA, int * owned argB) {
    int * owned a;
    if (num > 0) {
        a = argA;
    } else {
    }
    int * owned b = a; // expected-error {{use of possibly uninitialized value: `a`}}
} // expected-error {{memory leak of value: `b`}} expected-error {{memory leak of value: `argA`}} expected-error {{memory leak of value: `argB`}}

void func9(int num, int * owned argA, int * owned argB) {
    int * owned a;
    if (num > 0) {
        a = argA;
    }

    if (num < 10) {
        int * b = (int *)argB;
        a = argA; // expected-error {{assign to owned value: `a`}} expected-error {{use of moved value: `argA`}}
    }
} // expected-error {{memory leak of value: `argA`}} expected-error {{memory leak of value: `a`}} expected-error {{memory leak of value: `argB`}}

void func10(int * owned a, int * owned b) {
    if (1 + 1) {
        int * owned d = a;
    } else { // expected-error {{memory leak of value: `d`}}
    }
} // expected-error {{memory leak of value: `b`}}

void func11(int n) {
    int num = 5;
    int * owned a;
    if (n > 0) {
        a = (int * owned)&num;
        if (n > 5)
            a = (int * owned)&num; // expected-error {{assign to owned value: `a`}}
    }
} // expected-error {{memory leak of value: `a`}}

void func12(int n) {
    int num = 5;
    int * owned a;
    if (n > 0) {
        a = (int * owned)&num;
    }
    a = (int * owned)&num; // expected-error {{assign to owned value: `a`}}
} // expected-error {{memory leak of value: `a`}}