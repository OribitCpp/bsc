// %RUN: %clang_cc1 -verify %s

#define NULL ((void *)0)

safe T* owned safe_malloc<T>(T);
safe void safe_free(void* owned);

struct U { 
  int a;
  int* owned b;
};

struct M {
  int* p;
  int* q;
};

owned struct S<T> {
public:
  T *owned a;
  ~S(S<T> this) {
    if(this.a == NULL) {
    return;
    }
    safe_free((void* owned)this.a); // expected-error {{invalid cast to `void * owned` of not all moved value: `this.a`, this.a.b is owned}}
  }   
};
int main() {
  int a = 6;
  S<int> s = { safe_malloc(a) };
  struct U u = { .a = 1, .b = safe_malloc(1) };
  S<struct U> su = { safe_malloc(u) };
  struct M m = { .p = NULL, .q = NULL };
  S<struct M> sm = { safe_malloc(m) };
  return 0;
}