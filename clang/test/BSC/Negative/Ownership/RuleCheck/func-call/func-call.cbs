// RUN: %clang_cc1 -verify %s

int * owned IntPtrOwned() {
	int * owned a;
	return a; // expected-error {{use of uninitialized value: `a`}}
}

void func1() {
	int * owned a = IntPtrOwned();
	int * owned b = a;
	int * owned c = a; // expected-error {{use of moved value: `a`}}
} // expected-error {{memory leak of value: `c`}} expected-error {{memory leak of value: `b`}}

void callee1(int * owned a, int * owned b) {
	int c = 1;
} // expected-error {{memory leak of value: `a`}} expected-error {{memory leak of value: `b}}

void caller1(int * owned a, int * owned b) {
	callee1(a, b);
}

void caller2(int * owned a, int * owned b) {
	callee1(a, b);
	callee1(a, b); // expected-error {{use of moved value: `a`}} expected-error {{use of moved value: `b`}}
}

void caller3(int * owned a, int * owned b) {
	callee1(a, b);
	int * owned c = a; // expected-error {{use of moved value: `a`}}
} // expected-error {{memory leak of value: `c`}}

void caller4(int * owned a) {
	int * owned b;
	callee1(a, b); // expected-error {{use of uninitialized value: `b`}}
}

void caller5(int * owned a, int * owned b) {
	int * owned c = a;
	callee1(a, b); // expected-error {{use of moved value: `a`}}
} // expected-error {{memory leak of value: `c`}}

int * owned IntPtrOwned1() {
	int num = 1;
	int * owned a = (int * owned)&num;
	return a;
}

int * owned IntPtrOwned2(int * owned a) {
	return a;
}

void caller6(int * owned a) {
	int * owned b = IntPtrOwned2(a);
} // expected-error {{memory leak of value: `b`}}

struct A {
	int * owned a;
	int * owned b;
};

void callee2(int * owned a, int * owned b) {
	int c = 1;
} // expected-error {{memory leak of value: `a`}} expected-error {{memory leak of value: `b`}}

void func10(struct A a) {
	callee2(a.a, a.b);
}

struct B {
	int * owned a;
	int * owned b;
};

void func11(struct B b) {
	callee1(b.a, b.b);
}