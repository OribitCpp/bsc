// RUN: %clang_cc1 -verify %s

void func1() {
	int * owned a;
	for (int i = 0; i < 10; i++) {
		a = (int * owned)&i; // expected-error {{assign to owned value: `a`}}
	}
} // expected-error {{memory leak of value: `a`}}

int * owned IntPtrOwned(int * owned a);

void func2() {
	int * owned a;
	int * owned b;
	int num = 5;
	for (int i = 0; i < 10; i++) {
		b = (int * owned)&num;
		a = IntPtrOwned(b); // expected-error {{assign to owned value: `a`}}
	}
} // expected-error {{memory leak of value: `a`}}

void func3(int num) {
	int * owned b;
	int * owned c;
	for (int i = 0; i < 10; i++) {
		if (i == 5) {
			continue;
		}
		if (i > 5) {
			b = (int * owned)&num;
			int * owned a;
			if (i < 10) {
				a = b;
				b = (int * owned)&i;
			} else if (i < 20) {
				if (i > 12) {
					a = (int * owned)&i;
				} else if (i < 16) {
					a = b;
				} else {
					a = (int * owned)&num;
				}
			}
		} // expected-error {{memory leak of value: `a`}}
		c = b; // expected-error {{assign to owned value: `c`}} expected-error {{use of moved value: `b`}}
	}
} // expected-error {{memory leak of value: `c`}}

void func4(int num) {
	int * owned b;
	int * owned c;
	int i = 0;
	while (i < 10) {
		if (i == 5) {
			continue;
		}
		if (i > 5) {
			b = (int * owned)&num;
			int * owned a;
			if (i < 10) {
				a = b;
				b = (int * owned)&i;
			} else if (i < 20) {
				if (i > 12) {
					a = (int * owned)&i;
				} else if (i < 16) {
					a = b;
				} else {
					a = (int * owned)&num;
				}
			}
		} // expected-error {{memory leak of value: `a`}}
		c = b; // expected-error {{assign to owned value: `c`}} expected-error {{use of moved value: `b`}}
		i++;
	}
} // expected-error {{memory leak of value: `c`}}

void func5(int num) {
	int * owned b;
	int * owned c;
	int i = 0;
	do {
		if (i == 5) {
			continue;
		}
		if (i > 5) {
			b = (int * owned)&num;
			int * owned a;
			if (i < 10) {
				a = b;
				b = (int * owned)&i;
			} else if (i < 20) {
				if (i > 12) {
					a = (int * owned)&i;
				} else if (i < 16) {
					a = b;
				} else {
					a = (int * owned)&num;
				}
			}
		} // expected-error {{memory leak of value: `a`}}
		c = b; // expected-error {{assign to owned value: `c`}} expected-error {{use of moved value: `b`}}
		i++;
	} while (i < 10);
} // expected-error {{memory leak of value: `c`}}
