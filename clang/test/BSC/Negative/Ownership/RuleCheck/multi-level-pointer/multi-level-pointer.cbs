// RUN: %clang_cc1 -verify %s

void write_error_1(int * owned * owned * owned a) {
    ***a = 5;
} // expected-error {{memory leak of value: `a`}} expected-error {{field memory leak of value: `a`, *a, **a are leak}}

void write_error_2(owned int * owned * owned * owned a) {
    owned int * owned * owned * owned b = a;
    owned int * owned * owned * owned c = a; // expected-error {{use of moved value: `a`}}
} // expected-error {{memory leak of value: `b`}} expected-error {{field memory leak of value: `b`, *b, **b are leak}} expected-error {{memory leak of value: `c`}} expected-error {{field memory leak of value: `c`, *c, **c are leak}}

void write_error_3(owned int * owned * owned * owned a) {
    owned int * owned * owned * owned b = a;
    owned int * owned * owned * owned c = b;
    owned int * owned * owned * owned d = b; // expected-error {{use of moved value: `b`}}
} // expected-error {{memory leak of value: `d`}} expected-error {{field memory leak of value: `d`, *d, **d are leak}} expected-error {{memory leak of value: `c`}} expected-error {{field memory leak of value: `c`, *c, **c are leak}}

void * owned VoidPtrOwned();

void write_error_4() {
    void * owned c = VoidPtrOwned();
    void * owned d = c;
    void * owned e = c; // expected-error {{use of moved value: `c`}}
} // expected-error {{memory leak of value: `d`}} expected-error {{memory leak of value: `e`}}

void f4(int * owned p) {
    int re1;
    re1 = *p;
    return;
} // expected-error {{memory leak of value: `p`}}

int * owned f5(int * owned p) {
    int re1;
    re1 = *p;
    return p;
}

int * owned * owned f6(int * owned * owned p) {
    int re1;
    re1 = **p;
    return p;
}

void ufree(void * owned p);

void f8(int * owned * owned * owned p) {
    int * owned * owned q;
    q = *p;
    ufree((void * owned)p);
} // expected-error {{memory leak of value: `q`}} expected-error {{field memory leak of value: `q`, *q is leak}}

void f9(int * owned * owned * owned p) {
    int * owned q = **p;
    ufree((void * owned)p); // expected-error {{invalid cast to `void * owned` of not all moved value: `p`, *p is owned}}
} // expected-error {{memory leak of value: `q`}}