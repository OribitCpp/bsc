// RUN: %clang_cc1 -verify %s

struct C {
  int * owned c1;
  int * owned c2;
};

struct B {
  int * owned b1;
  int * owned b2;
  struct C * owned b3;
};

struct A {
  struct B a1;
  struct B * owned a2;
  struct B a3;
  struct A * a5;
};

#define NULL ((void *)0)

void func1(struct C c) {
} // expected-error {{field memory leak of value: `c`, c.c1, c.c2 are leak}}

void func2(struct A a) {
} // expected-error {{field memory leak of value: `a`, a.a1.b1, a.a1.b2, a.a1.b3, a.a1.b3.c1, a.a1.b3.c2, a.a2, a.a2.b1, a.a2.b2, a.a2.b3... are leak}}

void func3(struct A * a) {
}

void func4(struct A * owned a) {
} // expected-error {{memory leak of value: `a`}}
  // expected-error@-1 {{field memory leak of value: `a`, a.a1.b1, a.a1.b2, a.a1.b3, a.a1.b3.c1, a.a1.b3.c2, a.a2, a.a2.b1, a.a2.b2, a.a2.b3... are leak}}

void func6(struct A a) {
  {}
} // expected-error {{field memory leak of value: `a`, a.a1.b1, a.a1.b2, a.a1.b3, a.a1.b3.c1, a.a1.b3.c2, a.a2, a.a2.b1, a.a2.b2, a.a2.b3... are leak}}

void func7(struct A *a) {
  int num = 1;
  a->a1.b2 = (int *owned)&num;
}

void func8(struct A * a) {
  struct A *p = a;
  struct A *p1 = a;
}


//------------------owned-->allmoved--------------------
void func9(struct A a) {
  struct A p = a;
} // expected-error {{field memory leak of value: `p`, p.a1.b1, p.a1.b2, p.a1.b3, p.a1.b3.c1, p.a1.b3.c2, p.a2, p.a2.b1, p.a2.b2, p.a2.b3... are leak}}

struct A func10(struct A a) {
  struct A p = a;
  return p;
}

void func11(struct A a) {
  struct A p;
  p = a;
} // expected-error {{field memory leak of value: `p`, p.a1.b1, p.a1.b2, p.a1.b3, p.a1.b3.c1, p.a1.b3.c2, p.a2, p.a2.b1, p.a2.b2, p.a2.b3... are leak}}

void func12(struct A * owned a) {
  struct A * owned p = a;
} // expected-error {{memory leak of value: `p`}}
  // expected-error@-1 {{field memory leak of value: `p`, p.a1.b1, p.a1.b2, p.a1.b3, p.a1.b3.c1, p.a1.b3.c2, p.a2, p.a2.b1, p.a2.b2, p.a2.b3... are leak}}

void func13(struct B* owned bp) {
  struct B b = *bp;
  struct B* owned bo = bp; // expected-error {{use of all moved value: `bp`}}
} // expected-error {{memory leak of value: `b`}}
  // expected-error@-1 {{memory leak of value: `bo`}}
  // expected-error@-2 {{field memory leak of value: `bo`, bo.b1, bo.b2, bo.b3, bo.b3.c1, bo.b3.c2 are leak}}

void func14(struct B b) {
  int *p1 = (int *)b.b1;
  int *p2 = (int *)b.b2;
  struct C *p3 = (struct C *)b.b3;
}

//-----------------------------owned-->partialMoved---------------------------
void func15(struct A a) {
  struct C *p = (struct C *)a.a1.b3;
} // expected-error {{field memory leak of value: `a`, a.a1.b1, a.a1.b2, a.a2, a.a2.b1, a.a2.b2, a.a2.b3, a.a2.b3.c1, a.a2.b3.c2, a.a3.b1... are leak}}

void func16(struct A a) {
  struct C *owned p = a.a1.b3;
} // expected-error {{memory leak of value: `p`}}
  // expected-error@-1 {{field memory leak of value: `p`, p.c1, p.c2 are leak}}
  // expected-error@-2 {{field memory leak of value: `a`, a.a1.b1, a.a1.b2, a.a2, a.a2.b1, a.a2.b2, a.a2.b3, a.a2.b3.c1, a.a2.b3.c2, a.a3.b1... are leak}}

struct A func17(struct A a) {
  struct C *owned p = a.a1.b3;
  return a; // expected-error {{use of partially moved value: `a`, a.a1.b3, a.a1.b3.c1, a.a1.b3.c2 are moved}} expected-error {{memory leak of value: `p`}} expected-error {{field memory leak of value: `p`, p.c1, p.c2 are leak}}
}

void func18(struct A a) {
  struct B b;
  b = a.a1;
} // expected-error {{field memory leak of value: `b`, b.b1, b.b2, b.b3, b.b3.c1, b.b3.c2 are leak}}
  // expected-error@-1 {{field memory leak of value: `a`, a.a2, a.a2.b1, a.a2.b2, a.a2.b3, a.a2.b3.c1, a.a2.b3.c2, a.a3.b1, a.a3.b2, a.a3.b3... are leak}}

int *owned func19(struct A a) {
  return a.a1.b1;
} // expected-error {{field memory leak of value: `a`, a.a1.b2, a.a1.b3, a.a1.b3.c1, a.a1.b3.c2, a.a2, a.a2.b1, a.a2.b2, a.a2.b3, a.a2.b3.c1... are leak}}

struct B func20(struct A a) {
  return a.a1;
} // expected-error {{field memory leak of value: `a`, a.a2, a.a2.b1, a.a2.b2, a.a2.b3, a.a2.b3.c1, a.a2.b3.c2, a.a3.b1, a.a3.b2, a.a3.b3... are leak}}

void func21(struct A a) {
  int *p1 = (int *)a.a1.b1;
  int *owned p2 = a.a2->b2;
} // expected-error {{field memory leak of value: `a`, a.a1.b2, a.a1.b3, a.a1.b3.c1, a.a1.b3.c2, a.a2, a.a2.b1, a.a2.b3, a.a2.b3.c1, a.a2.b3.c2... are leak}}
  // expected-error@-1 {{memory leak of value: `p2`}}

void func22(struct A a) {
  int *p1 = (int *)(a.a1.b1);
  int *p2 = (int *)(a.a2->b1);
  int *p3 = (int *)(a.a1.b1); // expected-error {{use of moved value: `a.a1.b1`}}
} // expected-error {{field memory leak of value: `a`, a.a1.b2, a.a1.b3, a.a1.b3.c1, a.a1.b3.c2, a.a2, a.a2.b2, a.a2.b3, a.a2.b3.c1, a.a2.b3.c2... are leak}}

//------------------------------owned-->owned--------------------------

void func23(struct A a) {
  int num = 1;
  a.a1.b2 = (int *owned)&num; // expected-error {{assign to part of owned value: `a.a1.b2`}}
} // expected-error {{field memory leak of value: `a`, a.a1.b1, a.a1.b2, a.a1.b3, a.a1.b3.c1, a.a1.b3.c2, a.a2, a.a2.b1, a.a2.b2, a.a2.b3... are leak}}

void func24(struct B b) {
  int num = 1;
  int * p1 = (int*)(b.b1);
  b.b1 = (int *owned)&num;
} // expected-error {{field memory leak of value: `b`, b.b2, b.b3, b.b3.c1, b.b3.c2, b.b1 are leak}}

void func25(struct A a, struct B b) {
  int * p = (int*)(a.a1.b1);
  a.a1 = b; // expected-error {{assign to subfield owned value: `a`, a.a1.b2, a.a1.b3, a.a1.b3.c1, a.a1.b3.c2 are owned}}
} // expected-error {{field memory leak of value: `a`, a.a1.b1, a.a1.b2, a.a1.b3, a.a1.b3.c1, a.a1.b3.c2, a.a2, a.a2.b1, a.a2.b2, a.a2.b3... are leak}}

//--------------------------owned-->null-----------------------------
void func26(struct A *owned a) {
  a = (struct A* owned)(void *owned)NULL; // expected-error {{assign to owned value: `a`}}
}

void func27(struct A a) {
  a.a2 = (struct B* owned)(void *owned)NULL; // expected-error {{assign to part of owned value: `a.a2`}}
} // expected-error {{field memory leak of value: `a`, a.a1.b1, a.a1.b2, a.a1.b3, a.a1.b3.c1, a.a1.b3.c2, a.a3.b1, a.a3.b2, a.a3.b3, a.a3.b3.c1... are leak}}

//----------------------------------uninitialized-->owned----------------------------------
void func28(struct C * owned c) {
  struct A a;
  a.a1.b3 = c;
} // expected-error {{field memory leak of value: `a`, a.a1.b3, a.a1.b3.c1, a.a1.b3.c2 are leak}}

void func29(struct B b) {
  struct A a;
  a.a1 = b;
} // expected-error {{field memory leak of value: `a`, a.a1.b1, a.a1.b2, a.a1.b3, a.a1.b3.c1, a.a1.b3.c2 are leak}}

void func30(struct A * a) {
  int *p = (int *)(a->a1.b1);
  struct B b = a->a3;
} // expected-error {{field memory leak of value: `b`, b.b1, b.b2, b.b3, b.b3.c1, b.b3.c2 are leak}}

void func31(struct A a) {
  int *p1 = (int *)a.a1.b1;
  struct B b = a.a3;
} // expected-error {{field memory leak of value: `b`, b.b1, b.b2, b.b3, b.b3.c1, b.b3.c2 are leak}}
  // expected-error@-1 {{field memory leak of value: `a`, a.a1.b2, a.a1.b3, a.a1.b3.c1, a.a1.b3.c2, a.a2, a.a2.b1, a.a2.b2, a.a2.b3, a.a2.b3.c1... are leak}}


//-------------------------------uninitialized-->allMoved---------------------------
void func32() {
  struct A a;
  struct A p = a; // expected-error {{use of partially moved value: `a`, a.a1.b1, a.a1.b2, a.a1.b3, a.a1.b3.c1, a.a1.b3.c2, a.a2, a.a2.b1, a.a2.b2, a.a2.b3, a.a2.b3.c1, a.a2.b3.c2, a.a3.b1, a.a3.b2, a.a3.b3, a.a3.b3.c1, a.a3.b3.c2 are moved}}
} // expected-error {{field memory leak of value: `p`, p.a1.b1, p.a1.b2, p.a1.b3, p.a1.b3.c1, p.a1.b3.c2, p.a2, p.a2.b1, p.a2.b2, p.a2.b3... are leak}}

//------------------------uninitialized-->partialMoved----------------------
void func33() {
  struct A a;
  struct B p = a.a1; // expected-error {{use of partially moved value: `a.a1`, a.a1.b1, a.a1.b2, a.a1.b3, a.a1.b3.c1, a.a1.b3.c2, a.a2, a.a2.b1, a.a2.b2, a.a2.b3, a.a2.b3.c1, a.a2.b3.c2, a.a3.b1, a.a3.b2, a.a3.b3, a.a3.b3.c1, a.a3.b3.c2 are moved}}
} // expected-error {{field memory leak of value: `p`, p.b1, p.b2, p.b3, p.b3.c1, p.b3.c2 are leak}}

//-----------------------------allMoved-->partialMoved------------------------
struct A func34(struct A a) {
  struct A a1 = a;
  int num = 0;
  a.a1.b1 = (int *owned)&num;
  return a1;
} // expected-error {{field memory leak of value: `a`, a.a1.b1 is leak}}

//-------------------------------allMoved-->allMoved---------------------
void func35(struct A a) {
  struct A p = a;
  struct A p1 = a; // expected-error {{use of partially moved value: `a`, a.a1.b1, a.a1.b2, a.a1.b3, a.a1.b3.c1, a.a1.b3.c2, a.a2, a.a2.b1, a.a2.b2, a.a2.b3, a.a2.b3.c1, a.a2.b3.c2, a.a3.b1, a.a3.b2, a.a3.b3, a.a3.b3.c1, a.a3.b3.c2 are moved}}
} // expected-error {{field memory leak of value: `p1`, p1.a1.b1, p1.a1.b2, p1.a1.b3, p1.a1.b3.c1, p1.a1.b3.c2, p1.a2, p1.a2.b1, p1.a2.b2, p1.a2.b3... are leak}}
  // expected-error@-1 {{field memory leak of value: `p`, p.a1.b1, p.a1.b2, p.a1.b3, p.a1.b3.c1, p.a1.b3.c2, p.a2, p.a2.b1, p.a2.b2, p.a2.b3... are leak}}

void func37(struct A *owned a) {
  struct A *owned p = a;
  struct A *owned p1 = a; // expected-error {{use of moved value: `a`}}
} // expected-error {{memory leak of value: `p1`}}
  // expected-error@-1 {{field memory leak of value: `p1`, p1.a1.b1, p1.a1.b2, p1.a1.b3, p1.a1.b3.c1, p1.a1.b3.c2, p1.a2, p1.a2.b1, p1.a2.b2, p1.a2.b3... are leak}}
  // expected-error@-2 {{memory leak of value: `p`}}
  // expected-error@-3 {{field memory leak of value: `p`, p.a1.b1, p.a1.b2, p.a1.b3, p.a1.b3.c1, p.a1.b3.c2, p.a2, p.a2.b1, p.a2.b2, p.a2.b3... are leak}}

void func38(struct A a) {
  int *p1 = (int *)a.a1.b1;
  struct B b = a.a3;
  struct B c = a.a3; // expected-error {{use of partially moved value: `a.a3`, a.a1.b1, a.a3.b1, a.a3.b2, a.a3.b3, a.a3.b3.c1, a.a3.b3.c2 are moved}}
} // expected-error {{field memory leak of value: `c`, c.b1, c.b2, c.b3, c.b3.c1, c.b3.c2 are leak}}
  // expected-error@-1 {{field memory leak of value: `b`, b.b1, b.b2, b.b3, b.b3.c1, b.b3.c2 are leak}}
  // expected-error@-2 {{field memory leak of value: `a`, a.a1.b2, a.a1.b3, a.a1.b3.c1, a.a1.b3.c2, a.a2, a.a2.b1, a.a2.b2, a.a2.b3, a.a2.b3.c1... are leak}}

//----------------------------------paritalMoved-->allMoved-------------------------------
void func39(struct C c) {
  int* a = (int *)c.c1;
  int* b = (int *)c.c2;
}

void func40(struct A a) {
  int *p1 = (int *)a.a3.b1;
  struct B b = a.a3; // expected-error {{use of partially moved value: `a.a3`, a.a3.b1 is moved}}
} // expected-error {{field memory leak of value: `b`, b.b1, b.b2, b.b3, b.b3.c1, b.b3.c2 are leak}}
  // expected-error@-1 {{field memory leak of value: `a`, a.a1.b1, a.a1.b2, a.a1.b3, a.a1.b3.c1, a.a1.b3.c2, a.a2, a.a2.b1, a.a2.b2, a.a2.b3... are leak}}

//----------------------------------if/else-------------------------

void func41(struct C c, int num) {
  if (num > 0) {
    int* a = (int*)c.c1;
    int* b = (int*)c.c2;
  } else {
    int* a = (int*)c.c1;
    int* b = (int*)c.c2;
  }
}

void func42(struct C c, int num) {
  if (num > 0) {
    int* a = (int*)c.c1;
    int* b = (int*)c.c2;
  } else {
    int* a = (int*)c.c1;
  }
} // expected-error {{field memory leak of value: `c`, c.c2 is leak}}
