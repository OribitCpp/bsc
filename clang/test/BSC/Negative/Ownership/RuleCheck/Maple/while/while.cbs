// RUN: %clang_cc1 -verify %s

int rand();
int * owned assign();

void func1() {
    int * owned a;
    while (rand()) {
        a = assign(); // expected-error {{assign to owned value: `a`}}
    }
} // expected-error {{memory leak of value: `a`}}

void func2() {
    int * owned a;
    int * owned b;
    while (rand()) {
        b = assign();
        a = b; // expected-error {{assign to owned value: `a`}}
    }
} // expected-error {{memory leak of value: `a`}}

void func3() {
    int * owned a;
    int * owned b;
    int c;
    while (rand()) {
        if (c) {
            continue;
        }
        if (c) {
            continue;
        }
        b = assign();
        a = b; // expected-error {{assign to owned value: `a`}}
    }
} // expected-error {{memory leak of value: `a`}}

void func4() {
    int * owned a;
    int * owned b;
    int c;
    if (rand()) {
        goto label1;
    }
    while (rand()) {
        if (c) {
            continue;
        }
label1:
        if (c) {
            continue;
        }
        while (rand()) {
            b = assign(); // expected-error {{assign to owned value: `b`}}
        }
    }
} // expected-error {{memory leak of value: `b`}}

void func5() {
    int * owned a;
    int * owned b;
    int c;
    if (rand()) {
        goto label1;
    }
    while (rand()) {
        if (c) {
            continue;
        }
label1:
        if (c) {
            continue;
        }
        while (rand()) {
            a = b; // expected-error {{assign to owned value: `a`}} expected-error {{use of uninitialized value: `b`}}
        }
    }
} // expected-error {{memory leak of value: `a`}}

void func6() {
    int * owned a;
    int * owned b;
    int c;
    if (rand()) {
        goto label1;
    }
    while (rand()) {
        if (c) {
            continue;
        }
label1:
        if (c) {
            continue;
        }
        while (rand()) {
            b = assign();
            a = b; // expected-error {{assign to owned value: `a`}}
        }
    }
} // expected-error {{memory leak of value: `a`}}

void func7() {
    int * owned a;
    int * owned b;
    int c;
    if (rand()) {
        goto label1;
    }
    while (rand()) {
        if (c) {
            continue;
        }
label1:
        if (c) {
            continue;
        }
        while (rand()) {
            b = assign(); // expected-error {{assign to owned value: `b`}}
        }
    }
} // expected-error {{memory leak of value: `b`}}

int main() { return 0; }