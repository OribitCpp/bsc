// RUN: %clang_cc1 -verify %s

int rand();

void func1(int * owned argA, int * owned argB) {
    int * owned a;
    if (rand()) {
        a = argA;
    } else {
        a = argB;
    }
} // expected-error {{memory leak of value: `argA`}} expected-error {{memory leak of value: `argB`}} expected-error {{memory leak of value: `a`}}

void func2(int * owned argA, int * owned argB) {
    int * owned a;
    if (rand()) {
        a = argA;
    } else {
    }
    int * owned b = a; // expected-error {{use of possibly uninitialized value: `a`}}
} // expected-error {{memory leak of value: `argA`}} expected-error {{memory leak of value: `argB`}} expected-error {{memory leak of value: `b`}}

void func3(int * owned argA, int * owned argB) {
    int * owned a;
    if (rand()) {
        a = argA;
    } else {
    }
    int * owned b = argA; // expected-error {{use of moved value: `argA`}}
} // expected-error {{memory leak of value: `b`}} expected-error {{memory leak of value: `a`}} expected-error {{memory leak of value: `argB`}}

void func4(int local) {
    int * owned a = (int * owned)&local;
    int * owned b;
    switch (rand()) {
        case 0: {
            break;
        }
        case 1: {
            b = a;
            break;
        }
        case 4: {
            b = a;
            break;
        }
        case 5: {
            break;
        }
        default:
            break;
    }
    b = (int * owned)&local; // expected-error {{assign to owned value: `b`}}
} // expected-error {{memory leak of value: `b`}} expected-error {{memory leak of value: `a`}}

void func5(int * owned argA, int * owned argB) {
    int * owned a;
    int * owned b;
    if (rand()) {
        a = argA;
        if (rand()) {
            b = a;
        }
    } else {
        b = argB;
    }
    b = a; // expected-error {{assign to owned value: `b`}} expected-error {{use of moved value: `a`}}
} // expected-error {{memory leak of value: `b`}} expected-error {{memory leak of value: `argA`}} expected-error {{memory leak of value: `argB`}}

void func6(int * owned argA, int * owned argB) {
    int * owned a;
    int * owned b;
label1:
    if (rand()) {
        a = argA;
        goto label1; // expected-error {{Invalid code structure. Jumping back to previous labels is not allowed.}}
    }
}
int main() { return 0; }