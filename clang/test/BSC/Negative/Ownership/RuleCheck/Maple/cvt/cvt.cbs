// RUN: %clang_cc1 -verify %s

void * malloc(unsigned long);
void free(void * p);

int * owned case1() {
    int * a = (int*)malloc(sizeof(int));
    int * owned b = (int * owned)a;
    return b;
}

void * owned case2() {
    void * owned a = (void * owned)malloc(sizeof(int));
    return a;
}

void case3() {
    void * owned a = (void * owned)malloc(sizeof(int));
    free((void *)a);
}

void case4(void * owned buf) {
    free((void *)buf);
}

struct B {};
struct A {
    int numRunxs;
    struct B * owned b;
};

void case7() {
    struct A * owned aaa = (struct A * owned)(struct A *)malloc(sizeof(struct A));
    aaa->b = (struct B * owned)(struct B *)malloc(sizeof(struct B)); // expected-error {{assign to part of owned value: `aaa.b`}}
    free((void *)(void * owned)aaa->b);
} // expected-error {{memory leak of value: `aaa`}}

void case8() {
    struct A * owned aaa = (struct A * owned)(struct A *)malloc(sizeof(struct A));
    aaa->b = (struct B * owned)(struct B *)malloc(sizeof(struct B)); // expected-error {{assign to part of owned value: `aaa.b`}}
} // expected-error {{memory leak of value: `aaa`}} expected-error {{field memory leak of value: `aaa`, aaa.b is leak}}