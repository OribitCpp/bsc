// RUN: %clang_cc1 -verify %s

struct C {
    int * owned a;
    int * owned b;
};

struct B {
    int * owned a;
    int * owned b;
    struct C * owned c;
};

struct A {
    struct B b;
    struct B * owned c;
    struct B d;
    struct A * f;
};

int * owned IntPtrOwned() {
    int * owned a;
    return a; // expected-error {{use of uninitialized value: `a`}}
}

void func1(int * owned * owned * owned a, int * owned * owned * owned b) {
    int * owned c = IntPtrOwned();
    int * owned d = c;
    int * owned e = c; // expected-error {{use of moved value: `c`}}
} // expected-error {{memory leak of value: `a`}} expected-error {{field memory leak of value: `a`, *a, **a are leak}} expected-error {{memory leak of value: `b`}} expected-error {{field memory leak of value: `b`, *b, **b are leak}} expected-error {{memory leak of value: `d`}} expected-error {{memory leak of value: `e`}}

void * owned VoidPtrOwned_err(struct C * owned c) {
    int *d = (int*)c->a;
    d = (int*)c->b;
    return (void * owned)c;
}

void * owned VoidPtrOwned_succ(struct C * owned c) {
    struct C d = (struct C) *c;
    return (void * owned)c; // expected-error {{field memory leak of value: `d`, d.a, d.b are leak}}
}

int * owned IntOwned() {
    int * owned a;
    return a; // expected-error {{use of uninitialized value: `a`}}
}

void callee1(int * owned a, int * owned b) {} // expected-error {{memory leak of value: `a`}} expected-error {{memory leak of value: `b`}}

void caller1(int * owned a, int * owned b) {
    callee1(a, b);
}

void caller2(int * owned a, int * owned b) {
    int * owned c = a;
    callee1(a, b); // expected-error {{use of moved value: `a`}}
} // expected-error {{memory leak of value: `c`}}

void callee2(void * owned a) {} // expected-error {{memory leak of value: `a`}}

void caller3(void * owned a) {
    callee2(a);
}

void caller4(struct A * owned a) {
    struct A b = (struct A)*a;
    callee2((void * owned)a);
} // expected-error {{field memory leak of value: `b`, b.b.a, b.b.b, b.b.c, b.b.c.a, b.b.c.b, b.c, b.c.a, b.c.b, b.c.c... are leak}}

void caller5(struct A * owned a) {
    callee2((void * owned)a); // expected-error {{invalid cast to `void * owned` of not all moved value: `a`, a.b.a, a.b.b, a.b.c, a.b.c.a, a.b.c.b, a.c, a.c.a, a.c.b, a.c.c... are owned}}
}

int main() { return 0; }