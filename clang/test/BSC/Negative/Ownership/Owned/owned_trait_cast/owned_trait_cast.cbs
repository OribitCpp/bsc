// RUN: %clang_cc1 -verify %s

trait T {
  safe void do_it(This* owned this);
  void do_that(This* this);
  safe void do_this(This* borrow this);
};

safe void int::do_it(int* owned this) {
  unsafe { int* x = (int*)this; }
}

void int::do_that(int* this) {
}

safe void int::do_this(int* borrow this) {
}

impl trait T for int;

void cast1() {
  int x = 1;
  trait T* t1 = &x;
  trait T* t2 = t1;
}

void cast2() {
  int x = 1;
  trait T* owned t1 = (int* owned)&x;
  trait T* owned t2 = t1;
} // expected-error {{field memory leak of value: `t2`, t2.data is leak}}

void cast3() {
  int x = 1;
  trait T* borrow t1 = &mut x;
  trait T* borrow t2 = t1;
}
