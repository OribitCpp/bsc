// RUN: %clang_cc1 -ast-dump -verify %s

int myadd(int* a, int* b) {
    return *a + *b;
}

int owned myadd2(int* a, int* b) {
    int owned x = 10;
    return x;
}

typedef int (*FTP)(int*, int*);
typedef int (*FTPO)(int* owned, int*);

//case1: callExpr through funcPtr
void test1() {
    FTP ftp1 = myadd;
    int a = 10;
    int b = 10;
    int* owned p1 = (int* owned)&a;
    int* p2 = &b;
    int res = ftp1(p1, p2); //expected-error {{incompatible owned types, cannot cast 'int *owned' to 'int *'}}
}

// case2: unOwned to owned
void test2() {
    FTP owned ftp1 = myadd; //expected-error {{incompatible owned types, cannot cast 'int (int *, int *)' to 'owned FTP' (aka 'int (*owned)(int *, int *)'}}
}

// case3: inner owned check
void test3() {
    FTP ftp1 = myadd;
    FTP ftp2 = myadd2;  //expected-error {{cannot cast 'FTP' (aka 'int (*)(int *, int *)') to 'owned int (int *, int *)'}}
    FTPO ftpo1 = ftp1;  //expected-error {{cannot cast 'FTPO' (aka 'int (*)(int *owned, int *)') to 'FTP' (aka 'int (*)(int *, int *)')}}
    FTPO ftpo2 = (FTPO)ftp1;
}

// case4: no owned-like property
FTPO ftpo1; //legal even FTPO contains owned