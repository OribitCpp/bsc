// RUN: %clang_cc1 -verify %s

int *borrow int::get_mut_borrow(This *borrow this) {
  return this;
}

const int *borrow int::get_immut_borrow(const This *borrow this) {
  return this;
}

void use_mut(int *borrow p);
void use_immut(const int *borrow p);

void test1() {
  int a = 5;
  int *borrow p = a.get_mut_borrow(); // expected-note {{first mut borrow occurs here}}
  int *borrow q = a.get_mut_borrow(); // expected-error {{cannot borrow `a` as mutable more than once at a time}}
  use_mut(p);
  use_mut(q);
}

void test2() {
  int a = 5;
  const int *borrow p = a.get_immut_borrow(); // expected-note {{immutable borrow occurs here}}
  int *borrow q = a.get_mut_borrow(); // expected-error {{cannot borrow `a` as mutable because it is also borrowed as immutable}}
  use_immut(p);
  use_mut(q);
}