// RUN: %clang_cc1 -fsyntax-only -verify %s

trait F<T> {
  T f(This* this);
};

int int::f(int* this) {
  return 1;
}

struct S<T> {
  int num;
  trait F<T>* future;
  char c;
};

struct S1<T> {
  struct S<T> s;
};

int main() {
  int x = 1;
  trait F<int> *r = &x; // expected-warning {{incompatible pointer types initializing 'trait F<int> *' with an expression of type 'int *'}}
                        // expected-error@-1 {{expected a pointer type which has implemented 'trait F<int>', found 'int'}}
  struct S<int> s = { .future = &x, .c = 'c'}; // expected-error {{expected a pointer type which has implemented 'trait F<int>', found 'int'}}
  struct S<int> s1 = { .future = (trait F<int>*)&x }; // expected-error {{expected a pointer type which has implemented 'trait F<int>', found 'int'}}
  struct S<int> s2 = { 1, &x, 'c' }; // expected-error {{expected a pointer type which has implemented 'trait F<int>', found 'int'}}
                                     // expected-error@-1 {{incompatible integer to pointer conversion initializing 'struct __Trait_F_Vtable<int> *' with an expression of type 'int'}}
                                     // FIXME
  struct S<int> s3 = { 1, (trait F<int>*)&x, 'c' }; // expected-error {{expected a pointer type which has implemented 'trait F<int>', found 'int'}}
                                                    // expected-error@-1 {{incompatible integer to pointer conversion initializing 'struct __Trait_F_Vtable<int> *' with an expression of type 'int'}}
  struct S<int> s4 = { .future = r };
  struct S<int> s5;
  s5.future = &x; // expected-error {{expected a pointer type which has implemented 'trait F<int>', found 'int'}}
  int a = s.future->f();
  int a1 = s1.future->f();
  int a2 = s2.future->f();
  int a3 = s3.future->f();
  int a4 = s4.future->f();
  int a5 = s5.future->f();

  struct S1<int> s6 = { .s.future = &x }; // expected-error {{expected a pointer type which has implemented 'trait F<int>', found 'int'}}
  struct S1<int> s7 = { .s.num = 1, .s.future = (trait F<int>*)&x }; // expected-error {{expected a pointer type which has implemented 'trait F<int>', found 'int'}}
  struct S1<int> s8 = { s };
  struct S1<int> s9 = { {1, &x, 'c'} }; // expected-error {{expected a pointer type which has implemented 'trait F<int>', found 'int'}}
                                        // expected-error@-1 {{incompatible integer to pointer conversion initializing 'struct __Trait_F_Vtable<int> *' with an expression of type 'int'}}
  struct S1<int> s10 = { {1, (trait F<int>*)&x, 'c'} }; // expected-error {{expected a pointer type which has implemented 'trait F<int>', found 'int'}}
                                                        // expected-error@-1 {{incompatible integer to pointer conversion initializing 'struct __Trait_F_Vtable<int> *' with an expression of type 'int'}}
  struct S1<int> s11 = { .s.num = 1, .s.future = r, .s.c = 'c' };
  int b = s6.s.future->f();
  int b1 = s7.s.future->f();
  int b2 = s8.s.future->f();
  int b3 = s9.s.future->f();
  int b4 = s10.s.future->f();
  int b5 = s11.s.future->f();
  return a + a1 + a2 + a3 + a4 + a5 - b -b1 -b2 -b3 -b4 -b5;
}