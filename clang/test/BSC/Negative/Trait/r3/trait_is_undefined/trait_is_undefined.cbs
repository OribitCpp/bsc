// RUN: %clang_cc1 -fsyntax-only -verify %s

trait F {
  int foo(This* this);
};

int int::foo(int* this) {
  return 0;
}

impl trait F for int;

trait F* get(trait T* t) { // expected-warning {{declaration of 'trait T' will not be visible outside of this function}}
// expected-error@-1 {{'trait T' must be defined before it can be used}}
  int a = 6;
  trait F* f = &a;
  trait F* f2 = (trait F*)&a;
  ((trait F*)&a)->foo();

  int* c = &a;
  return c;
}

struct S{
  trait F* f;
  trait T* t; // expected-error {{'trait T' must be defined before it can be used}}
};

trait T* test(){ // expected-error {{'trait T' must be defined before it can be used}}
  int a = 6;
  trait T* t = &a; // expected-warning {{incompatible pointer types initializing 'trait T *' with an expression of type 'int *'}}
  trait T* t2 = (trait T*)&a;

  int* c = &a;
  return c; // expected-error {{expected a pointer type which has implemented 'trait T', found 'int'}}
};

int main() {
  return 0;
}