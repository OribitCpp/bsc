// RUN: %clang_cc1 -fsyntax-only -verify %s

trait F{};
trait F foo1();  // expected-error {{only trait pointer type is allowed to be declared}}
trait F foo1() {  // expected-error {{only trait pointer type is allowed to be declared}}
    trait F f; // expected-error {{only trait pointer type is allowed to be declared}}
    return f; // expected-error {{use of undeclared identifier 'f'}}
}
trait F (*call1)(); // expected-error {{only trait pointer type is allowed to be declared}}
trait F int::foo2(int* this); // expected-error {{only trait pointer type is allowed to be declared}}

trait G<T> {};
trait G<T> foo3(); // expected-error {{use of undeclared identifier 'T'}}
trait G<T> foo4<T>(); // expected-error {{only trait pointer type is allowed to be declared}}
trait G<T>(*call2)(); // expected-error {{only trait pointer type is allowed to be declared}}
trait G<T> int::foo5(int* this);  // expected-error {{use of undeclared identifier 'T'}}

trait G<int> foo6();  // expected-error {{only trait pointer type is allowed to be declared}}
trait G<int> foo7<int>();// expected-error {{only trait pointer type is allowed to be declared}}  expected-error {{expected template parameter}}
trait G<int> (*call3)(); // expected-error {{only trait pointer type is allowed to be declared}}
trait G<int> int::foo8(int* this); // expected-error {{only trait pointer type is allowed to be declared}}