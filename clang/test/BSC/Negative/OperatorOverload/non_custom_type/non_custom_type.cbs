// RUN: %clang_cc1 -fsyntax-only -verify %s

__attribute__((operator +))
int intAdd_1(int a, int b) {     // expected-error {{overloaded 'intAdd_1' must have at least one parameter of class or enumeration type}}
    return a + b;
}

__attribute__((operator +))
int intAdd_2(int a, float b) {   // expected-error {{overloaded 'intAdd_2' must have at least one parameter of class or enumeration type}}
    return a + b;
}

enum E {
    one,
    two,
    three,
};
__attribute__((operator +))
int intAdd_3(int a, enum E b) {  // ok 
    return a + b;
}

struct F {
    int f1;
};

__attribute__((operator +))
int intAdd_4(int a, struct F b) {  // ok 
    return a + b.f1;
}

__attribute__((operator +))
int intAdd_5(int a, struct F *b) {   // expected-error {{overloaded 'intAdd_5' must have at least one parameter of class or enumeration type}}
    return a + b->f1;
}

struct G {
    int g1;
};

__attribute__((operator +))
int intAdd_6(struct F a, struct G g) {  // ok 
    return a.f1 + g.g1;
}

int main() {
    return 0;
}