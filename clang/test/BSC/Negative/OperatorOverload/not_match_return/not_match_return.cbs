// RUN: %clang_cc1 -fsyntax-only -verify %s

struct E
{
    int a;
};

struct F {
    float b;
};

__attribute__((operator >))
float operator2(struct F a, struct F b) {           // expected-error{{return type for defaulted relational comparison operator must be 'bool', not 'float'}}
    return a.b;
}

__attribute__((operator >=))
float operator3(struct F a, struct F b) {           // expected-error{{return type for defaulted relational comparison operator must be 'bool', not 'float'}}
    return a.b;
}

__attribute__((operator <))
float operator4(struct F a, struct F b) {           // expected-error{{return type for defaulted relational comparison operator must be 'bool', not 'float'}}
    return a.b;
}

__attribute__((operator <=))
float operator5(struct F a, struct F b) {           // expected-error{{return type for defaulted relational comparison operator must be 'bool', not 'float'}}
    return a.b;
}

__attribute__((operator ==))
float operator6(struct F a, struct F b) {           // expected-error{{return type for defaulted equality comparison operator must be 'bool', not 'float'}}
    return a.b;
}

__attribute__((operator !=))
float operator7(struct F a, struct F b) {           // expected-error{{return type for defaulted equality comparison operator must be 'bool', not 'float'}}
    return a.b;
}

struct G {
    int b;
};

__attribute__((operator ==))
int operator8(struct G a, struct G b) {           // expected-error{{return type for defaulted equality comparison operator must be 'bool', not 'int'}}
    return a.b > b.b;
}

__attribute__((operator ==))
_Bool operator9(struct G a, struct G b) {          // ok
    return a.b > b.b;
}

int main(){
}

