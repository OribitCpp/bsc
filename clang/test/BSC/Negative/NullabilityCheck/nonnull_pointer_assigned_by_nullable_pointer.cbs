// RUN: %clang_cc1 -verify %s

safe int *owned _Nonnull safe_malloc(int a);

safe void test1(void) {
    int *borrow _Nullable p1 = nullptr;
    int *borrow _Nonnull p2 = p1;   // expected-error {{nonnull pointer cannot be assigned by nullable pointer}}
    int a = 10;
    int *borrow _Nullable p3 = &mut a;
    int *borrow _Nonnull p4 = p3;
    int *borrow _Nonnull p5 = &mut a;
    p5 = p1;   // expected-error {{nonnull pointer cannot be assigned by nullable pointer}}
    p5 = p3;
}

safe void test2(void) {
    int *owned _Nullable p1 = nullptr;
    int *owned _Nonnull p2 = p1;   // expected-error {{nonnull pointer cannot be assigned by nullable pointer}}
    int *owned _Nullable p3 = safe_malloc(5);
    int *owned _Nonnull p4 = p3;
    int *owned _Nonnull p5 = safe_malloc(5);
    p5 = p1;   // expected-error {{nonnull pointer cannot be assigned by nullable pointer}}
    p5 = p3;
}

safe void test3(void) {
    int *borrow _Nullable p1 = nullptr;
    int *borrow p2 = p1;   // expected-error {{nonnull pointer cannot be assigned by nullable pointer}}
    int a = 10;
    int *borrow _Nullable p3 = &mut a;
    int *borrow p4 = p3;
    int *borrow p5 = &mut a;
    p5 = p1;   // expected-error {{nonnull pointer cannot be assigned by nullable pointer}}
    p5 = p3;
}

safe void test4(void) {
    int *owned _Nullable p1 = nullptr;
    int *owned p2 = p1;   // expected-error {{nonnull pointer cannot be assigned by nullable pointer}}
    int *owned _Nullable p3 = safe_malloc(5);
    int *owned p4 = p3;
    int *owned p5 = safe_malloc(5);
    p5 = p1;   // expected-error {{nonnull pointer cannot be assigned by nullable pointer}}
    p5 = p3;
}

safe void test5(void) {
    int a = 10;
    int *borrow _Nonnull p1 = a == 1 ? nullptr : &mut a; // expected-error {{nonnull pointer cannot be assigned by nullable pointer}}
    int *borrow _Nullable p2 = a == 1 ? nullptr : &mut a;
    *p2 = 10;  // expected-error {{nullable pointer cannot be dereferenced}}
    int b = 10;
    int *borrow _Nullable p3 = a == 1 && b == 10 ? &mut b : &mut a;
    *p3 = 10;

    p1 = a == 1 ? nullptr : &mut a;  // expected-error {{nonnull pointer cannot be assigned by nullable pointer}}
    p2 = a == 1 ? nullptr : &mut a;
    *p2 = 10;  // expected-error {{nullable pointer cannot be dereferenced}}
    p3 = a == 1 && b == 10 ? &mut b : &mut a;
    *p3 = 10;
}