// RUN: %clang_cc1 -verify %s

// field redefinition
owned struct A {
    int a; // expected-note {{previous declaration is here}}
    int a; // expected-error {{duplicate member 'a'}}
};

owned struct B {
    static int a; // expected-note {{previous declaration is here}}
    int a; // expected-error {{duplicate member 'a'}}
};

owned struct C {
    static int a; // expected-note {{previous declaration is here}}
    static int a; // expected-error {{duplicate member 'a'}}
};

// field with function redefinition
owned struct D {
    int a; // expected-note {{previous definition is here}}
    int a() { return 0; } // expected-error {{redefinition of 'a' as different kind of symbol}}
};

owned struct E {
    static int a; // expected-note {{previous definition is here}}
    int a() { return 0; } // expected-error {{redefinition of 'a' as different kind of symbol}}
};

owned struct F {
    int a; // expected-note {{previous definition is here}}
    int a(F* this) { return 0; } // expected-error {{redefinition of 'a' as different kind of symbol}}
};

owned struct G {
    static int a; // expected-note {{previous definition is here}}
    int a(G* this) { return 0; } // expected-error {{redefinition of 'a' as different kind of symbol}}
};

// function redefinition
owned struct H {
    int a(); // expected-note {{previous declaration is here}}
    int a(); // expected-error {{struct member cannot be redeclared}}
};

owned struct I {
    int a(); // expected-note {{previous declaration is here}}
    int a(int a); // expected-error {{conflicting types for 'a'}}
};

owned struct J {
    int a(); // expected-note {{previous declaration is here}}
    int a(J* this); // expected-error {{conflicting types for 'a'}}
};

owned struct K {
    int a(K* this); // expected-note {{previous declaration is here}}
    int a(K* this); // expected-error {{struct member cannot be redeclared}}
};

owned struct L {
    int a();                // expected-note {{previous declaration is here}}
    int a() { return 0; } // expected-error {{struct member cannot be redeclared}}
};

owned struct M {
    int a(M* this); // expected-note {{previous declaration is here}}
    int a(M* this) { return 0; } // expected-error {{struct member cannot be redeclared}}
};

owned struct N {
    int a() { return 0; } // expected-note {{previous definition is here}}
    int a() { return 0; } // expected-error {{struct member cannot be redeclared}}
};

owned struct O {
    int a(O* this) { return 0; } // expected-note {{previous definition is here}}
    int a(O* this) { return 0; } // expected-error {{struct member cannot be redeclared}}
};

owned struct P {
    int a() { return 0; } // expected-note {{previous definition is here}}
};

int P::a() { return 0; } // expected-error {{redefinition of 'a'}}

owned struct Q {
    int a(); // expected-note {{previous declaration is here}}
};

int Q::a(int a) { return 0; } // expected-error {{conflicting types for 'a'}}

owned struct R {
    int a();
};

int R::a() { return 0; } // expected-note {{previous definition is here}}
int R::a() { return 0; } // expected-error {{redefinition of 'a'}}

owned struct S {
    int a(S* this) { return 0; } // expected-note {{previous definition is here}}
};

int S::a(S* this) { return 0; } // expected-error {{redefinition of 'a'}}

owned struct T {
    int a(T* this); // expected-note {{previous declaration is here}}
};

int T::a(int a) { return 0; } // expected-error {{conflicting types for 'a'}}

owned struct U {
    int a(U* this);
};

int U::a(U* this) { return 0; } // expected-note {{previous definition is here}}
int U::a(U* this) { return 0; } // expected-error {{redefinition of 'a'}}