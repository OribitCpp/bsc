// RUN: %clang_cc1 -verify %s

owned struct A {
  public:
    static int a;
};
int A::a;

owned struct B {
  public:
   static A aa;
};
A B::aa;

int goo() {
    A a = {};
    a.a = 1;
    A::a = 2;
    return a.a; // expected-error {{memory leak because temporary variable 'a' is owned or indirect owned type, please fix it}}
}

int foo() {
    A a = {};
    a.a = 1;
    A::a = 2;
    B b = {};
    b.aa= a;
    return b.aa.a; // expected-error {{memory leak because temporary variable 'b' is owned or indirect owned type, please fix it}}
}
int koo() {
    A a = {};
    a.a = 1;
    A::a = 2;
    B b = {};
    b.aa= a;
    return -b.aa.a; // expected-error {{memory leak because temporary variable 'b' is owned or indirect owned type, please fix it}}
}

A zoo() {
  A a = {};
  a.a = 1;
  return a; 
}

owned struct C<T>{
  public:
    static int a;
};
int C<T>::a;

owned struct D<T> {
  public:
   static C<int> aa;
};
C<int> D<T>::aa;

int foo_G() {
    C<int> a = {};
    a.a = 1;
    C<int>::a = 2;
    D<int> b = {};
    b.aa= a;
    return b.aa.a; // expected-error {{memory leak because temporary variable 'b' is owned or indirect owned type, please fix it}}
}
int main() {
    return 0; 
}
