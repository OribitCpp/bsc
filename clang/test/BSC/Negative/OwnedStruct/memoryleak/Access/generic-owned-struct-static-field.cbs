// RUN: %clang_cc1 -verify %s

owned struct A<T> {
  public:
    static int a;
};
int A<T>::a;

owned struct B<T> {
  public:
   static A<T> aa;
   static A<int> aa1;

};
A<T> B<T>::aa;
A<int> B<T>::aa1;

int goo() {
    A<int> a = {};
    a.a = 1;
    A<int>::a = 2;
    return a.a; // expected-error {{memory leak because temporary variable 'a' is owned or indirect owned type, please fix it}}
}

int foo() {
    A<int> a = {};
    a.a = 1;
    A<int>::a = 2;
    B<int> b = {};
    b.aa= a;
    return b.aa.a; // expected-error {{memory leak because temporary variable 'b' is owned or indirect owned type, please fix it}}
}
int koo() {
    A<char> a = {};
    a.a = 1;
    A<char>::a = 2;
    B<char> b = {};
    b.aa= a;
    return -b.aa.a + b.aa1.a; // expected-error {{memory leak because temporary variable 'b' is owned or indirect owned type, please fix it}}
}

int main() {
    return 0; 
}
