// RUN: %clang_cc1 -fsyntax-only -verify %s

// If the function declaration and function implementation are inconsistent,
// a compilation error is reported

safe void test_1(int * owned p);    // expected-note {{previous declaration is here}}
safe void test_1(int * p) {         // expected-error {{unsafe parameter type is forbidden in the safe function}}
}                                   // expected-error@-1 {{conflicting types for 'test_1'}}

safe void test_1_0(int * owned p);    // expected-note {{previous declaration is here}}
safe void test_1_0(owned int * p) {   // expected-error {{unsafe parameter type is forbidden in the safe function}}
}                                     // expected-error@-1 {{conflicting types for 'test_1_0'}}

safe void test_1_1(int * owned p);           // expected-note {{previous declaration is here}}
safe void test_1_1(owned int * owned p) {    // expected-error {{conflicting types for 'test_1_1'}}
}

safe void test_1_2(int ** owned p);           // expected-note {{previous declaration is here}}
safe void test_1_2(owned int ** owned p) {    // expected-error {{conflicting types for 'test_1_2'}}
}

safe void test_2(int owned p);      // expected-note {{previous declaration is here}}
safe void test_2(int p) {           // expected-error {{conflicting types for 'test_2'}}
}

safe int * test_3(int * owned p);           // expected-error {{unsafe return type is forbidden in the safe function}}
                                            // expected-note@-1 {{previous declaration is here}}
safe int * owned test_3(int * owned p) {    // expected-error {{conflicting types for 'test_3'}}
    return p;
}

safe int * owned test_3_0(int * owned p);                 // expected-note {{previous declaration is here}}
safe owned int * owned test_3_0(owned int * owned p) {    // expected-error {{conflicting types for 'test_3_0'}}
    return p;
}

safe int ** owned test_3_1(int ** owned p);                 // expected-note {{previous declaration is here}}
safe owned int ** owned test_3_1(owned int ** owned p) {    // expected-error {{conflicting types for 'test_3_1'}}
    return p;
}

safe int owned test_4(void);                // expected-note {{previous declaration is here}}
safe int test_4(void) {                     // expected-error {{conflicting types for 'test_4'}}
    return 0;
}

safe void test_5(int *owned p);             // expected-note {{previous declaration is here}}
safe void test_5(int *borrow p) {           // expected-error {{conflicting types for 'test_5'}}
}

safe int * owned test_6(int *owned p);      // expected-note {{previous declaration is here}}
safe int * borrow test_6(int *borrow p) {   // expected-error {{conflicting types for 'test_6'}}
    return p;
}

safe void test_7(int * borrow p);           // expected-note {{previous declaration is here}}
safe void test_7(int * p) {                 // expected-error{{unsafe parameter type is forbidden in the safe function}}
}                                           // expected-error@-1 {{conflicting types for 'test_7'}}

int * a;
safe int * borrow test_8(int * borrow p);   // expected-note {{previous declaration is here}}
safe int * test_8(int * borrow p) {         // expected-error{{unsafe return type is forbidden in the safe function}}
                                            // expected-error@-1{{conflicting types for 'test_8'}}
    return a;
}

safe void test_80(int *borrow p);           // expected-note {{previous declaration is here}}
safe void test_80(const int *borrow p) {    // expected-error{{conflicting types for 'test_80'}}
}

safe int *borrow test_81(int *borrow p);                // expected-note {{previous declaration is here}}
safe const int *borrow test_81(const int *borrow p) {   // expected-error{{conflicting types for 'test_81'}}
}

void test_9(int * owned p);   // expected-note {{previous declaration is here}}
void test_9(int * p) {    // expected-error{{conflicting types for 'test_9'}}
}

unsafe void test_9_0(int * owned p);     // expected-note {{previous declaration is here}}
void test_9_0(int * p) {       // expected-error{{conflicting types for 'test_9_0'}}
}

unsafe void test_9_1(int * owned p);// expected-note {{previous declaration is here}}
unsafe void test_9_1(int * p) {   // expected-error{{conflicting types for 'test_9_1'}}
}

void test_9_2(int * owned p);// expected-note {{previous declaration is here}}
void test_9_2(owned int * p) {// expected-error{{conflicting types for 'test_9_2'}}
}

void test_10(int owned p);// expected-note {{previous declaration is here}}
void test_10(int p) {   // expected-error{{conflicting types for 'test_10'}}
}

int * owned test_11(int *p);// expected-note {{previous declaration is here}}
int * owned test_11(int *owned p) {   // expected-error{{conflicting types for 'test_11'}}
    return p;
}

int test_12(void);// expected-note {{previous declaration is here}}
int owned test_12(void) {   // expected-error{{conflicting types for 'test_12'}}
    return 0;
}

void test_13(int *owned p);// expected-note {{previous declaration is here}}
void test_13(int *borrow p) {  // expected-error{{conflicting types for 'test_13'}}
}

int * owned test_14(int *owned p);  // expected-note {{previous declaration is here}}
int * borrow test_14(int *borrow p) {   // expected-error{{conflicting types for 'test_14'}}
}

void test_15(int * borrow p);  // expected-note {{previous declaration is here}}
void test_15(int * p) {   // expected-error{{conflicting types for 'test_15'}}
}

int * borrow test_16(int * borrow p);  // expected-note {{previous declaration is here}}
int * test_16(int * borrow p) {    // expected-error{{conflicting types for 'test_16'}}
    return 0;
}

safe int * borrow test_17(int * borrow p);  // expected-note {{previous declaration is here}}
int * test_17(int * borrow p) {    // expected-error{{conflicting types for 'test_17'}}
    return 0;
}

safe void test_18(int * borrow p);  // expected-note {{previous declaration is here}}
void test_18(int * p) {   // expected-error{{conflicting types for 'test_18'}}
}

safe void test_19(int * owned p);   // expected-note {{previous declaration is here}}
void test_19(int * p) {    // expected-error{{conflicting types for 'test_19'}}
}

safe int * owned test_20(int * owned p);   // expected-note {{previous declaration is here}}
int * test_20(int * p) {    // expected-error{{conflicting types for 'test_20'}}
    return 0;
}

int * borrow test_21(const int * borrow p);  // expected-note {{previous declaration is here}}
int * borrow test_21(int * borrow p) {    // expected-error{{conflicting types for 'test_21'}}
    return p;
}

void test_22(const int * borrow p);  // expected-note {{previous declaration is here}}
void test_22(const int * p) {    // expected-error{{conflicting types for 'test_22'}}
}
