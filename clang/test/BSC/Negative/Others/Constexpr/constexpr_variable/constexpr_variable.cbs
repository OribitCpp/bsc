// RUN: %clang_cc1 -verify %s
#include<stdbool.h>
struct S {
    int a;
};
enum E {
    mon = 1,
    tue = 2,
    wen = 3
};

int main() {
    constexpr int a = 5;   // expected-note {{variable 'a' declared const here}}
    a = 6;    // expected-error {{cannot assign to variable 'a' with const-qualified type 'const int'}}

    constexpr bool b = 5;  
    constexpr char c = 5;  

    constexpr float d = 5.0;  // expected-error {{BSC constexpr variable does not support type 'const float'}}
    constexpr struct S s = {.a = 5};  // expected-error {{BSC constexpr variable does not support type 'const struct S'}}
    constexpr enum E e = 1;  // expected-error {{BSC constexpr variable does not support type 'const enum E'}} 
    
    constexpr int f;  // expected-error {{constexpr variable 'f' must be initialized by a constant expression}}
    
    return 0;
}